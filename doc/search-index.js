var searchIndex = new Map(JSON.parse('[["algebra",{"t":"RKKKKKRKKRRRMMMMMMMMMM","n":["A","Action","ActionMonoid","Commutative","Group","IdempotentMonoid","M","Monoid","Semiring","Target","","","add_assign","apply","binary_operation","composition","id_action","id_element","inverse","mul","one","zero"],"q":[[0,"algebra"],[22,"core::clone"]],"i":"n`````0``jA`Ab021221Ad111","f":"````````````{{{d{bc}}{d{c}}}f{}}{{{d{{j{}{{h{c}}}}}}{d{bc}}}fl}{{{d{c}}{d{c}}}c{}}{{{d{b{j{}{{h{c}}}}}}{d{{j{}{{h{c}}}}}}}fl}{{}{{j{}{{h{c}}}}}l}{{}c{}}{{{d{c}}}c{}}{{{d{c}}{d{c}}}c{}}{{}c{}}0","D":"Bb","p":[[0,"mut"],[1,"reference",null,null,1],[1,"unit"],[17,"Target"],[10,"Action",0],[10,"Clone",22],[10,"ActionMonoid",0],[10,"Monoid",0],[10,"Semiring",0],[10,"Group",0]],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAAUAAgAMAAEAEwADAA==","P":[[12,"Semiring::Target"],[13,"Action::Target"],[14,"Monoid::Target"],[15,"Action::Target"],[17,"Monoid::Target"],[19,"Semiring::Target"]]}],["atcoder_mincostflow",{"t":"FFNNNNNONNNNNNONNONNNNONNNNNONNNNNNNN","n":["MinCostFlowEdge","MinCostFlowGraph","add_edge","borrow","","borrow_mut","","cap","clone","","clone_into","","clone_to_uninit","","cost","edges","flow","","fmt","","from","","","get_edge","into","","new","slope","to","to_owned","","try_from","","try_into","","type_id",""],"q":[[0,"atcoder_mincostflow"],[37,"internal_type_traits"],[38,"core::ops::arith"],[39,"core::clone"],[40,"alloc::vec"],[41,"core::fmt"],[42,"core::result"],[43,"core::any"]],"i":"``dA`101001010101100101010111001010101","f":"``{{{f{b{d{c}}}}hhcc}h{j{n{}{{l{}}}}}}{f{{f{c}}}{}}0{{{f{b}}}{{f{bc}}}{}}0{A`}{{{f{{A`{c}}}}}{{A`{c}}}Ab}{{{f{{d{c}}}}}{{d{c}}}Ab}{{f{f{bc}}}Ad{}}0{{fAf}Ad}04{{{f{{d{c}}}}}{{Ah{{A`{c}}}}}{j{n{}{{l{}}}}}}{{{f{b{d{c}}}}hhc}{{Aj{cc}}}{j{n{}{{l{}}}}}}6{{{f{{A`{c}}}}{f{bAl}}}AnB`}{{{f{{d{c}}}}{f{bAl}}}AnB`}{cc{}}0{A`h}{{{f{{d{c}}}}h}{{A`{c}}}{j{n{}{{l{}}}}}}{{}c{}}0{h{{d{c}}}{j{n{}{{l{}}}}}}{{{f{b{d{c}}}}hhc}{{Ah{{Aj{cc}}}}}{j{n{}{{l{}}}}}}4{fc{}}0{c{{Bb{e}}}{}{}}0{{}{{Bb{c}}}{}}0{fBd}0","D":"l","p":[[0,"mut"],[5,"MinCostFlowGraph",0],[1,"reference",null,null,1],[1,"usize"],[10,"Integral",37],[17,"Output"],[10,"Neg",38],[5,"MinCostFlowEdge",0],[10,"Clone",39],[1,"unit"],[1,"u8"],[5,"Vec",40],[1,"tuple",null,null,1],[5,"Formatter",41],[8,"Result",41],[10,"Debug",41],[6,"Result",42,null,1],[5,"TypeId",43]],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAB8ABAABAA8AEgACABcAAQAbAAoA","P":[[2,"T"],[7,""],[8,"T"],[12,""],[15,"T"],[17,""],[18,"T"],[22,""],[23,"T"],[24,"U"],[26,"T"],[28,""],[29,"T"],[31,"U,T"],[33,"U"],[35,""]]}],["atcoder_string",{"t":"HHHHHHH","n":["lcp_array","lcp_array_arbitrary","suffix_array","suffix_array_arbitrary","suffix_array_manual","z_algorithm","z_algorithm_arbitrary"],"q":[[0,"atcoder_string"],[7,"alloc::vec"],[8,"core::cmp"]],"i":"```````","f":"{{{d{b}}{d{{h{f}}}}}{{j{f}}}}{{{d{{h{c}}}}{d{{h{f}}}}}{{j{f}}}l}{{{d{b}}}{{j{f}}}}{{{d{{h{c}}}}}{{j{f}}}l}{{{d{{h{n}}}}n}{{j{f}}}}21","D":"b","p":[[1,"str"],[1,"reference",null,null,1],[1,"usize"],[1,"slice"],[5,"Vec",7],[10,"Ord",8],[1,"i32"]],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAAYAAQABAAYA","P":[[1,"T"],[2,""],[3,"T"],[4,""],[6,"T"]]}],["auxiliary_tree",{"t":"FNNONNNNNNNN","n":["AuxiliaryTree","borrow","borrow_mut","euler_tour","fmt","from","gen_auxiliary_tree","into","new","try_from","try_into","type_id"],"q":[[0,"auxiliary_tree"],[12,"euler_tour"],[13,"core::fmt"],[14,"alloc::vec"],[15,"core::option"],[16,"core::result"],[17,"core::any"]],"i":"`f0000000000","f":"`{b{{b{c}}}{}}{{{b{d}}}{{b{dc}}}{}}{fh}{{{b{f}}{b{dj}}}l}{cc{}}{{{b{f}}{A`{n}}}{{Ab{{A`{n}}{A`{{Ab{nn}}}}{Ad{n}}}}}}{{}c{}}{{{b{{Af{{A`{n}}}}}}n}f}{c{{Ah{e}}}{}{}}{{}{{Ah{c}}}{}}{bAj}","D":"h","p":[[1,"reference",null,null,1],[0,"mut"],[5,"AuxiliaryTree",0],[5,"EulerTour",12],[5,"Formatter",13],[8,"Result",13],[1,"usize"],[5,"Vec",14],[1,"tuple",null,null,1],[6,"Option",15,null,1],[1,"slice"],[6,"Result",16,null,1],[5,"TypeId",17]],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAAgAAgABAAQACQADAA==","P":[[1,"T"],[3,""],[5,"T"],[6,""],[7,"U"],[8,""],[9,"U,T"],[10,"U"],[11,""]]}],["avl",{"t":"FFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN","n":["AVL","Iter","append","borrow","","borrow_mut","","clone","clone_into","clone_to_uninit","contains","count","erase","erase_by_index","fmt","","from","","get","height","insert","insert_by_index","into","","into_iter","into_vec","is_empty","iter","len","lower_bound","new","next","rotate_left","rotate_right","split_off","to_owned","to_string","try_from","","try_into","","type_id","","upper_bound"],"q":[[0,"avl"],[44,"core::clone"],[45,"core::cmp"],[46,"core::option"],[47,"core::fmt"],[48,"alloc::vec"],[49,"core::ops::range"],[50,"alloc::string"],[51,"core::result"],[52,"core::any"]],"i":"``dB`1011111111110111110101111110111110101011","f":"``{{{f{b{d{c}}}}{f{b{d{c}}}}}h{}}{f{{f{c}}}{}}0{{{f{b}}}{{f{bc}}}{}}0{{{f{{d{c}}}}}{{d{c}}}j}{{f{f{bc}}}h{}}{{fl}h}{{{f{{d{c}}}}{f{c}}}nA`}{{{f{{d{c}}}}{f{c}}}AbA`}{{{f{b{d{c}}}}{f{c}}}nA`}{{{f{b{d{c}}}}Ab}{{Ad{c}}}{}}{{{f{{d{c}}}}{f{bAf}}}AhAj}{{{f{{d{c}}}}{f{bAf}}}AhAl}{cc{}}0{{{f{{d{c}}}}Ab}{{Ad{{f{c}}}}}{}}{{{f{{d{c}}}}}l{}}{{{f{b{d{c}}}}c}hA`}{{{f{b{d{c}}}}Abc}h{}}{{}c{}}0{{}c{}}{{{d{c}}}{{An{c}}}{}}{{{f{{d{c}}}}}n{}}{{{f{{d{c}}}}}{{B`{c}}}{}}{{{f{{d{c}}}}}Ab{}}?{n{{d{c}}}{}}{{{f{b{B`{c}}}}}{{Ad{e}}}{}{}}{{{f{b{d{c}}}}eAb}h{}{{Bb{Ab}}}}0{{{f{b{d{c}}}}Ab}{{d{c}}}{}}{fc{}}{fBd}{c{{Bf{e}}}{}{}}0{{}{{Bf{c}}}{}}0{fBh}0{{{f{{d{c}}}}{f{c}}}AbA`}","D":"Aj","p":[[0,"mut"],[5,"AVL",0],[1,"reference",null,null,1],[1,"unit"],[10,"Clone",44],[1,"u8"],[1,"bool"],[10,"PartialOrd",45],[1,"usize"],[6,"Option",46,null,1],[5,"Formatter",47],[8,"Result",47],[10,"Display",47],[10,"Debug",47],[5,"Vec",48],[5,"Iter",0],[10,"RangeBounds",49],[5,"String",50],[6,"Result",51,null,1],[5,"TypeId",52]],"r":[],"b":[[14,"impl-Display-for-AVL%3CT%3E"],[15,"impl-Debug-for-AVL%3CT%3E"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAB8ACAABAAEABAAIAA4AAgAUAAAAFgAAABkABQAgAAAAJAAIAA==","P":[[2,"T"],[9,""],[10,"T"],[22,"U"],[24,"I"],[25,"T"],[31,"T,Iterator::Item"],[32,"T,R"],[34,"T"],[36,""],[37,"U,T"],[39,"U"],[41,""],[43,"T"]]}],["binom",{"t":"FNNNNNNNNNNNN","n":["Binom","borrow","borrow_mut","comb","from","get_fact","get_ifact","into","new","perm","try_from","try_into","type_id"],"q":[[0,"binom"],[13,"internal_modint"],[14,"core::result"],[15,"core::any"]],"i":"`f00000000000","f":"`{b{{b{c}}}{}}{{{b{d}}}{{b{dc}}}{}}{{{b{{f{c}}}}hh}cj}{cc{}}{{{b{{f{c}}}}h}cj}0{{}c{}}{h{{f{c}}}j}4{c{{l{e}}}{}{}}{{}{{l{c}}}{}}{bn}","D":"n","p":[[1,"reference",null,null,1],[0,"mut"],[5,"Binom",0],[1,"usize"],[10,"ModInt",13],[6,"Result",14,null,1],[5,"TypeId",15]],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAAYAAwABAAIACQAAAAsAAgA=","P":[[1,"T"],[7,"U"],[8,"T"],[10,"U,T"],[11,"U"],[12,""]]}],["bit_matrix",{"t":"FKFFMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNN","n":["BitMatrix","BitMatrixOps","PlusOrMulAnd","PlusXorMulAnd","add","","","","borrow","","","borrow_mut","","","clone","","","clone_into","","","clone_to_uninit","","","eq","","","fmt","","","from","","","","","","","gauss_jordan","get","index","into","","","linear_equation","mul","","","","new","pow","set","to_owned","","","transpose","try_from","","","try_into","","","type_id","","","unit"],"q":[[0,"bit_matrix"],[64,"core::fmt"],[65,"bitset"],[66,"alloc::vec"],[67,"core::option"],[68,"core::result"],[69,"core::any"]],"i":"````Bjhjb21021021021021021021021000000002100321000021002102102100","f":"````{{{d{b}}{d{b}}}b}000{d{{d{c}}}{}}00{{{d{f}}}{{d{fc}}}{}}00{{{d{h}}}h}{{{d{j}}}j}{{{d{b}}}b}{{d{d{fc}}}l{}}00{{dn}l}00{{{d{h}}{d{h}}}A`}{{{d{j}}{d{j}}}A`}{{{d{b}}{d{b}}}A`}{{{d{h}}{d{fAb}}}Ad}{{{d{j}}{d{fAb}}}Ad}{{{d{b}}{d{fAb}}}Ad}{cc{}}0{{{Af{{Af{A`}}}}}b}{{{Af{Ah}}}b}{{{Aj{Ah}}}b}{{{Aj{{Aj{A`}}}}}b}4{{{d{fb}}A`}{{An{Al{Aj{Al}}}}}}{{{d{b}}AlAl}A`}{{{d{b}}Al}{{d{c}}}{}}{{}c{}}00{{{d{b}}{d{{B`{A`}}}}}{{Bb{{An{Al{Aj{A`}}}}}}}}{{{d{b}}{d{b}}}b}000{{AlAl}b}{{{d{b}}Bd}b}{{{d{fb}}AlAlA`}l}{dc{}}00{{{d{b}}}b}{c{{Bf{e}}}{}{}}00{{}{{Bf{c}}}{}}00{dBh}00{Alb}","D":"Aj","p":[[5,"BitMatrix",0],[1,"reference",null,null,1],[0,"mut"],[5,"PlusOrMulAnd",0],[5,"PlusXorMulAnd",0],[1,"unit"],[1,"u8"],[1,"bool"],[5,"Formatter",64],[8,"Result",64],[1,"array"],[5,"BitSet",65],[5,"Vec",66],[1,"usize"],[1,"tuple",null,null,1],[1,"slice"],[6,"Option",67,null,1],[1,"u64"],[6,"Result",68,null,1],[5,"TypeId",69],[10,"BitMatrixOps",0]],"r":[],"b":[[31,"impl-From%3C%5B%5Bbool;+W%5D;+H%5D%3E-for-BitMatrix"],[32,"impl-From%3C%5BBitSet;+H%5D%3E-for-BitMatrix"],[33,"impl-From%3CVec%3CBitSet%3E%3E-for-BitMatrix"],[34,"impl-From%3CVec%3CVec%3Cbool%3E%3E%3E-for-BitMatrix"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAADMABgABAAEABQAYACAAAwAnAAAALAAEADIADgA=","P":[[8,"T"],[14,""],[17,"T"],[20,""],[29,"T"],[31,""],[35,"T"],[36,""],[38,"Index::Output"],[39,"U"],[42,""],[50,"T"],[53,""],[54,"U,T"],[57,"U"],[60,""]]}],["bitdict",{"t":"FNNNNNNNNNNNNNNNNNNNNNNN","n":["BitDict","access","borrow","borrow_mut","build","clone","clone_into","clone_to_uninit","fmt","from","","into","new","rank0_all","rank1_all","rank_0","rank_1","select_0","select_1","set","to_owned","try_from","try_into","type_id"],"q":[[0,"bitdict"],[24,"core::fmt"],[25,"core::option"],[26,"core::result"],[27,"core::any"]],"i":"`b0000000000000000000000","f":"`{{{d{b}}f}h}{d{{d{c}}}{}}{{{d{j}}}{{d{jc}}}{}}{{{d{jb}}}l}{{{d{b}}}b}{{d{d{jc}}}l{}}{{dn}l}{{{d{b}}{d{jA`}}}Ab}{{{d{{Ad{h}}}}}b}{cc{}}{{}c{}}{fb}{{{d{b}}}f}0{{{d{b}}f}f}0{{{d{b}}f}{{Af{f}}}}0{{{d{jb}}f}l}{dc{}}{c{{Ah{e}}}{}{}}{{}{{Ah{c}}}{}}{dAj}","D":"Aj","p":[[5,"BitDict",0],[1,"reference",null,null,1],[1,"usize"],[1,"bool"],[0,"mut"],[1,"unit"],[1,"u8"],[5,"Formatter",24],[8,"Result",24],[1,"slice"],[6,"Option",25,null,1],[6,"Result",26,null,1],[5,"TypeId",27]],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAAsABAABAAAAAwABAAYABAAVAAMA","P":[[2,"T"],[4,""],[6,"T"],[7,""],[10,"T"],[11,"U"],[12,""],[20,"T"],[21,"U,T"],[22,"U"],[23,""]]}],["bitset",{"t":"FNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN","n":["BitSet","all","any","bitand","","bitand_assign","bitor","","bitor_assign","bitxor","","bitxor_assign","borrow","borrow_mut","buffer","buffer_mut","chomp","clone","clone_into","clone_to_uninit","count_ones","count_zeros","eq","flip","fmt","from","","","get","hash","index","into","new","none","not","","set","shl","","shl_assign","shl_or","shr","","shr_assign","shr_or","size","to_owned","try_from","try_into","type_id"],"q":[[0,"bitset"],[50,"core::fmt"],[51,"alloc::vec"],[52,"core::hash"],[53,"core::result"],[54,"core::any"]],"i":"`b000000000000000000000000000000000000000000000000","f":"`{{{d{b}}}f}0{{b{d{b}}}c{}}{{{d{b}}{d{b}}}c{}}{{{d{hb}}{d{b}}}j}{{{d{b}}{d{b}}}c{}}{{b{d{b}}}c{}}2{{b{d{b}}}c{}}{{{d{b}}{d{b}}}c{}}4{d{{d{c}}}{}}{{{d{h}}}{{d{hc}}}{}}{{{d{b}}}{{d{{n{l}}}}}}{{{d{hb}}}{{d{h{n{l}}}}}}{{{d{hb}}}j}{{{d{b}}}b}{{d{d{hc}}}j{}}{{dA`}j}{{{d{b}}}Ab}0{{{d{b}}{d{b}}}f}{{{d{hb}}Ad}j}{{{d{b}}{d{hAf}}}Ah}{cc{}}{{{Aj{f}}}b}{{{Al{f}}}b}{{{d{b}}Ad}f}{{{d{b}}{d{hc}}}jAn}{{{d{b}}Ad}{{d{f}}}}{{}c{}}{Adb}{{{d{b}}}f}{bb}{{{d{b}}}c{}}{{{d{hb}}Adf}j}{{bAd}c{}}{{{d{b}}Ad}c{}}??{{bAd}c{}}{{{d{b}}Ad}c{}}{{{d{hb}}Ad}j}0{{{d{b}}}Ad}{dc{}}{c{{B`{e}}}{}{}}{{}{{B`{c}}}{}}{dBb}","D":"B`","p":[[5,"BitSet",0],[1,"reference",null,null,1],[1,"bool"],[0,"mut"],[1,"unit"],[1,"u64"],[1,"slice"],[1,"u8"],[1,"u32"],[1,"usize"],[5,"Formatter",50],[8,"Result",50],[5,"Vec",51],[1,"array"],[10,"Hasher",52],[6,"Result",53,null,1],[5,"TypeId",54]],"r":[],"b":[[3,"impl-BitAnd%3C%26BitSet%3E-for-BitSet"],[4,"impl-BitAnd%3C%26BitSet%3E-for-%26BitSet"],[6,"impl-BitOr%3C%26BitSet%3E-for-%26BitSet"],[7,"impl-BitOr%3C%26BitSet%3E-for-BitSet"],[9,"impl-BitXor%3C%26BitSet%3E-for-BitSet"],[10,"impl-BitXor%3C%26BitSet%3E-for-%26BitSet"],[26,"impl-From%3CVec%3Cbool%3E%3E-for-BitSet"],[27,"impl-From%3C%5Bbool;+N%5D%3E-for-BitSet"],[34,"impl-Not-for-BitSet"],[35,"impl-Not-for-%26BitSet"],[37,"impl-Shl%3Cusize%3E-for-BitSet"],[38,"impl-Shl%3Cusize%3E-for-%26BitSet"],[41,"impl-Shr%3Cusize%3E-for-BitSet"],[42,"impl-Shr%3Cusize%3E-for-%26BitSet"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAACIACgAEAAwAEgACABcAAAAZAAAAGwABAB4AAQAjAAEAJgACACoAAgAuAAQA","P":[[3,"BitAnd::Output"],[5,""],[6,"BitOr::Output"],[8,""],[9,"BitXor::Output"],[11,""],[12,"T"],[14,""],[18,"T"],[19,""],[25,"T"],[26,""],[29,"__H"],[30,""],[31,"U"],[32,""],[35,"Not::Output"],[36,""],[37,"Shl::Output"],[39,""],[41,"Shr::Output"],[43,""],[46,"T"],[47,"U,T"],[48,"U"],[49,""]]}],["bitwise_convolution",{"t":"HHHHH","n":["bitwise_and_convolution","bitwise_or_convolution","bitwise_xor_convolution","fast_hadamard","inv_fast_hadamard"],"q":[[0,"bitwise_convolution"],[5,"alloc::vec"],[6,"core::marker"],[7,"core::ops::arith"],[8,"core::ops::bit"]],"i":"`````","f":"{{{d{{b{c}}}}{d{{b{c}}}}}{{f{c}}}{h{l{}{{j{}}}}{n{}{{j{}}}}A`}}0{{{d{{b{c}}}}{d{{b{c}}}}}{{f{c}}}{h{l{}{{j{}}}}{n{}{{j{}}}}A`Ab}}{{{f{c}}}{{f{c}}}{h{l{}{{j{}}}}{n{}{{j{}}}}}}{{{f{c}}}{{f{c}}}{h{l{}{{j{}}}}{n{}{{j{}}}}{Ab{Ad}}}}","D":"l","p":[[1,"slice"],[1,"reference",null,null,1],[5,"Vec",5],[10,"Copy",6],[17,"Output"],[10,"Add",7],[10,"Sub",7],[10,"MulAssign",7],[10,"ShrAssign",8],[1,"u32"]],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OjAAAAAAAAA=","P":[[0,"T"]]}],["capture",{"t":"QQ","n":["crecurse","memorize"],"q":[[0,"capture"]],"i":"``","f":"``","D":"f","p":[],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OjAAAAAAAAA=","P":[]}],["cartesian_tree",{"t":"FNNNNNNNNONOOONNNN","n":["CartesianTree","borrow","borrow_mut","clone","clone_into","clone_to_uninit","fmt","from","into","left_child","new","parent","right_child","root","to_owned","try_from","try_into","type_id"],"q":[[0,"cartesian_tree"],[18,"core::fmt"],[19,"alloc::vec"],[20,"core::cmp"],[21,"core::result"],[22,"core::any"]],"i":"`f0000000000000000","f":"`{b{{b{c}}}{}}{{{b{d}}}{{b{dc}}}{}}{{{b{f}}}f}{{b{b{dc}}}h{}}{{bj}h}{{{b{f}}{b{dl}}}n}{cc{}}{{}c{}}{fA`}{{{b{{Ab{c}}}}Ad}fAf}11{fAh}{bc{}}{c{{Aj{e}}}{}{}}{{}{{Aj{c}}}{}}{bAl}","D":"h","p":[[1,"reference",null,null,1],[0,"mut"],[5,"CartesianTree",0],[1,"unit"],[1,"u8"],[5,"Formatter",18],[8,"Result",18],[5,"Vec",19],[1,"slice"],[1,"bool"],[10,"PartialOrd",20],[1,"usize"],[6,"Result",21,null,1],[5,"TypeId",22]],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAA4AAwABAAYACgAAAAwABgA=","P":[[1,"T"],[3,""],[4,"T"],[5,""],[7,"T"],[8,"U"],[9,""],[10,"T"],[11,""],[14,"T"],[15,"U,T"],[16,"U"],[17,""]]}],["centroid_decomposition",{"t":"FNNNNNNNNNNN","n":["CentroidDecomposition","borrow","borrow_mut","calc_centroid_tree","from","get_centroid","into","new","run","try_from","try_into","type_id"],"q":[[0,"centroid_decomposition"],[12,"alloc::vec"],[13,"core::option"],[14,"core::ops::function"],[15,"core::result"],[16,"core::any"]],"i":"`f0000000000","f":"`{b{{b{c}}}{}}{{{b{d}}}{{b{dc}}}{}}{f{{j{{l{{j{hh}}}}{n{h}}}}}}{cc{}}{{{b{df}}h}h}{{}c{}}{{{b{{l{{l{h}}}}}}}f}{{fc}A`{{Af{{b{{Ad{Ab}}}}h}}}}{c{{Ah{e}}}{}{}}{{}{{Ah{c}}}{}}{bAj}","D":"l","p":[[1,"reference",null,null,1],[0,"mut"],[5,"CentroidDecomposition",0],[1,"usize"],[1,"tuple",null,null,1],[5,"Vec",12],[6,"Option",13,null,1],[1,"unit"],[1,"bool"],[1,"slice"],[10,"FnMut",14],[6,"Result",15,null,1],[5,"TypeId",16]],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAAYAAwABAAIACAAAAAoAAgA=","P":[[1,"T"],[3,""],[4,"T"],[5,""],[6,"U"],[7,""],[8,"F"],[9,"U,T"],[10,"U"],[11,""]]}],["cht_offline",{"t":"FKGGNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNMNN","n":["CHTOffline","Compare","MaxCompare","MinCompare","add_line","add_line_segment","borrow","","","borrow_mut","","","fmt","","","from","","","get","identity","","","into","","","new","try_from","","","try_into","","","type_id","","","update","",""],"q":[[0,"cht_offline"],[38,"core::ops::range"],[39,"core::fmt"],[40,"alloc::vec"],[41,"core::result"],[42,"core::any"]],"i":"````d0A`Af21021021022l212133213213213021","f":"````{{{f{b{d{c}}}}hh}jl}{{{f{b{d{c}}}}hhe}jl{{n{h}}}}{f{{f{c}}}{}}00{{{f{b}}}{{f{bc}}}{}}00{{{f{A`}}{f{bAb}}}Ad}{{{f{Af}}{f{bAb}}}Ad}{{{f{{d{c}}}}{f{bAb}}}Ad{Ahl}}{cc{}}00{{{f{{d{c}}}}h}hl}{{}h}00{{}c{}}00{{{Aj{h}}}{{d{c}}}l}{c{{Al{e}}}{}{}}00{{}{{Al{c}}}{}}00{fAn}00{{hh}B`}00","D":"Aj","p":[[0,"mut"],[5,"CHTOffline",0],[1,"reference",null,null,1],[1,"i64"],[1,"unit"],[10,"Compare",0],[10,"RangeBounds",38],[6,"MaxCompare",0],[5,"Formatter",39],[8,"Result",39],[6,"MinCompare",0],[10,"Debug",39],[5,"Vec",40],[6,"Result",41,null,1],[5,"TypeId",42],[1,"bool"]],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OzAAAAEAABkABQADAAEABwAIABQAAgAaAAkAJQABAA==","P":[[4,"T"],[5,"T,R"],[6,"T"],[12,""],[14,"T"],[19,""],[22,"U"],[25,"T"],[26,"U,T"],[29,"U"],[32,""]]}],["convex_hull",{"t":"FNNNHNNNNNNNNNNNNNHNNNNNNNNNNOO","n":["Point","add","borrow","borrow_mut","calc_farthest_point_pair","clone","clone_into","clone_to_uninit","cmp","cross","dot","eq","fmt","","from","","hash","into","monotone_chain","mul","new","partial_cmp","square_dist","sub","to_owned","to_string","try_from","try_into","type_id","x","y"],"q":[[0,"convex_hull"],[31,"geometry_basics"],[32,"core::cmp"],[33,"core::fmt"],[34,"core::result"],[35,"core::hash"],[36,"alloc::vec"],[37,"core::option"],[38,"alloc::string"],[39,"core::any"]],"i":"`b00`0000000000000`000000000000","f":"`{{bb}}{d{{d{c}}}{}}{{{d{f}}}{{d{fc}}}{}}{{{d{{h{b}}}}}j}{{{d{b}}}b}{{d{d{fc}}}l{}}{{dn}l}{{{d{b}}{d{b}}}A`}{{bb}j}0{{{d{b}}{d{b}}}Ab}{{{d{b}}{d{fAd}}}{{Ah{lAf}}}}0{{{Aj{jj}}}b}{cc{}}{{{d{b}}{d{fc}}}lAl}{{}c{}}{{{d{{h{b}}}}Ab}{{Aj{{An{b}}{An{b}}}}}}{{bj}}{{jj}b}{{{d{b}}{d{b}}}{{B`{A`}}}}{bj}{{bb}}{dc{}}{dBb}{c{{Ah{e}}}{}{}}{{}{{Ah{c}}}{}}{dBd}66","D":"A`","p":[[5,"Point",0,31],[1,"reference",null,null,1],[0,"mut"],[1,"slice"],[1,"i64"],[1,"unit"],[1,"u8"],[6,"Ordering",32],[1,"bool"],[5,"Formatter",33],[5,"Error",33],[6,"Result",34,null,1],[1,"tuple",null,null,1],[10,"Hasher",35],[5,"Vec",36],[6,"Option",37,null,1],[5,"String",38],[5,"TypeId",39]],"r":[[0,31],[1,31],[2,31],[3,31],[5,31],[6,31],[7,31],[8,31],[9,31],[10,31],[11,31],[12,31],[13,31],[14,31],[15,31],[16,31],[17,31],[19,31],[20,31],[21,31],[22,31],[23,31],[24,31],[25,31],[26,31],[27,31],[28,31],[29,31],[30,31]],"b":[[12,"impl-Display-for-Point"],[13,"impl-Debug-for-Point"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAABcABwAAAAAAAgACAAYAAwAMAAMAEQAAABQAAgAYAAcA","P":[[2,"T"],[4,""],[6,"T"],[7,""],[15,"T"],[16,"__H"],[17,"U"],[18,""],[24,"T"],[25,""],[26,"U,T"],[27,"U"],[28,""]]}],["doubling",{"t":"FNNNNNNNNNNNNNN","n":["Doubling","borrow","borrow_mut","clone","clone_into","clone_to_uninit","fmt","from","into","new","query","to_owned","try_from","try_into","type_id"],"q":[[0,"doubling"],[15,"core::fmt"],[16,"core::result"],[17,"core::any"]],"i":"`f0000000000000","f":"`{b{{b{c}}}{}}{{{b{d}}}{{b{dc}}}{}}{{{b{f}}}f}{{b{b{dc}}}h{}}{{bj}h}{{{b{f}}{b{dl}}}n}{cc{}}{{}c{}}{{{b{{Ab{A`}}}}Ad}f}{{{b{f}}A`Ad}A`}{bc{}}{c{{Af{e}}}{}{}}{{}{{Af{c}}}{}}{bAh}","D":"j","p":[[1,"reference",null,null,1],[0,"mut"],[5,"Doubling",0],[1,"unit"],[1,"u8"],[5,"Formatter",15],[8,"Result",15],[1,"usize"],[1,"slice"],[1,"u64"],[6,"Result",16,null,1],[5,"TypeId",17]],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAAoAAgABAAYADAADAA==","P":[[1,"T"],[3,""],[4,"T"],[5,""],[7,"T"],[8,"U"],[9,""],[11,"T"],[12,"U,T"],[13,"U"],[14,""]]}],["dual_segtree",{"t":"FNNNNNNNNNNNNN","n":["DualSegTree","apply_range","apply_range_commutative","borrow","borrow_mut","fmt","from","get_composition","get_mapped","into","new","try_from","try_into","type_id"],"q":[[0,"dual_segtree"],[14,"algebra"],[15,"core::ops::range"],[16,"core::fmt"],[17,"core::result"],[18,"core::any"]],"i":"`d000000000000","f":"`{{{f{b{d{c}}}}e{f{c}}}hj{{n{l}}}}{{{f{b{d{c}}}}e{f{c}}}h{jA`}{{n{l}}}}{f{{f{c}}}{}}{{{f{b}}}{{f{bc}}}{}}{{{f{{d{c}}}}{f{bAb}}}Ad{Afj}}{cc{}}{{{f{{d{c}}}}l}cj}{{{f{{d{c}}}}l}{}j}{{}c{}}{l{{d{c}}}j}{c{{Ah{e}}}{}{}}{{}{{Ah{c}}}{}}{fAj}","D":"A`","p":[[0,"mut"],[5,"DualSegTree",0],[1,"reference",null,null,1],[1,"unit"],[10,"Action",14],[1,"usize"],[10,"RangeBounds",15],[10,"Commutative",14],[5,"Formatter",16],[8,"Result",16],[10,"Debug",16],[6,"Result",17,null,1],[5,"TypeId",18]],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAAYAAgAEAAIACwADAA==","P":[[1,"T,R"],[3,"T"],[9,"U"],[10,"T"],[11,"U,T"],[12,"U"],[13,""]]}],["dynamic_modint",{"t":"FKNNNNNNNNNQNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN","n":["DynamicModInt","ModContainer","add","add_assign","","borrow","borrow_mut","clone","clone_into","clone_to_uninit","default","define_modcontainer","div","div_assign","","eq","fmt","","from","","","","","","","","","","","","","from_str","get_static_modulus","hash","into","inv","modulus","","","mul","mul_assign","","neg","new","","one","pow","product","raw","","set_modulus","","sub","sub_assign","","sum","to_owned","to_string","try_from","try_into","type_id","value","","zero"],"q":[[0,"dynamic_modint"],[64,"internal_modint"],[65,"core::clone"],[66,"core::default"],[67,"core::cmp"],[68,"core::fmt"],[69,"core::num::error"],[70,"core::result"],[71,"std::sync::once_lock"],[72,"core::hash"],[73,"core::iter::traits::iterator"],[74,"alloc::string"],[75,"core::any"]],"i":"``b00000000`00000000000000000000d1110111111111111101111111111111","f":"``{{{b{c}}e}{{b{c}}}d{}}{{{h{f{b{c}}}}e}jdl}{{{h{f{b{c}}}}{b{c}}}jd}{h{{h{c}}}{}}{{{h{f}}}{{h{fc}}}{}}{{{h{{b{c}}}}}{{b{c}}}{nd}}{{h{h{fc}}}j{}}{{hA`}j}{{}{{b{c}}}{Abd}}`867{{{h{{b{c}}}}{h{{b{c}}}}}Ad{Afd}}{{{h{{b{c}}}}{h{fAh}}}Ajd}0{Al{{b{c}}}d}{An{{b{c}}}d}{B`{{b{c}}}d}{Bb{{b{c}}}d}{Bd{{b{c}}}d}{cc{}}{Bf{{b{c}}}d}{Bh{{b{c}}}d}{A`{{b{c}}}d}{Bj{{b{c}}}d}{Bl{{b{c}}}d}{Bn{{b{c}}}d}{C`{{b{c}}}d}{{{h{Cb}}}{{Cf{{b{c}}Cd}}}d}{{}{{h{{Ch{Al}}}}}}{{{h{{b{c}}}}{h{fe}}}j{Cjd}Cl}{{}c{}}{{{h{{b{c}}}}}{{b{c}}}d}{{}Al}00{{{b{c}}e}{{b{c}}}d{}}{{{h{f{b{c}}}}{b{c}}}jd}{{{h{f{b{c}}}}e}jdl}{{{b{c}}}{{b{c}}}d}{c{{b{e}}}ld}0{{}{{b{c}}}d}{{{h{{b{c}}}}Bb}{{b{c}}}d}{e{{b{g}}}{}{{D`{}{{Cn{c}}}}}d}{Al{{b{c}}}d}0{Alj}09782{hc{}}{hDb}{c{{Cf{e}}}{}{}}{{}{{Cf{c}}}{}}{hDd}{{{h{{b{c}}}}}Ald}0:","D":"h","p":[[5,"DynamicModInt",0],[10,"ModContainer",0],[0,"mut"],[1,"reference",null,null,1],[1,"unit"],[10,"RemEuclidU32",64],[10,"Clone",65],[1,"u8"],[10,"Default",66],[1,"bool"],[10,"PartialEq",67],[5,"Formatter",68],[8,"Result",68],[1,"u32"],[1,"u128"],[1,"usize"],[1,"u64"],[1,"i8"],[1,"i16"],[1,"u16"],[1,"i32"],[1,"i128"],[1,"isize"],[1,"i64"],[1,"str"],[5,"ParseIntError",69],[6,"Result",70,null,1],[5,"OnceLock",71],[10,"Hash",72],[10,"Hasher",72],[17,"Item"],[10,"Iterator",73],[5,"String",74],[5,"TypeId",75]],"r":[],"b":[[3,"impl-AddAssign%3CT%3E-for-DynamicModInt%3CMOD%3E"],[4,"impl-AddAssign-for-DynamicModInt%3CMOD%3E"],[13,"impl-DivAssign-for-DynamicModInt%3CMOD%3E"],[14,"impl-DivAssign%3CT%3E-for-DynamicModInt%3CMOD%3E"],[16,"impl-Display-for-DynamicModInt%3CMOD%3E"],[17,"impl-Debug-for-DynamicModInt%3CMOD%3E"],[18,"impl-From%3Cu32%3E-for-DynamicModInt%3CMOD%3E"],[19,"impl-From%3Cu128%3E-for-DynamicModInt%3CMOD%3E"],[20,"impl-From%3Cusize%3E-for-DynamicModInt%3CMOD%3E"],[21,"impl-From%3Cu64%3E-for-DynamicModInt%3CMOD%3E"],[22,"impl-From%3Ci8%3E-for-DynamicModInt%3CMOD%3E"],[24,"impl-From%3Ci16%3E-for-DynamicModInt%3CMOD%3E"],[25,"impl-From%3Cu16%3E-for-DynamicModInt%3CMOD%3E"],[26,"impl-From%3Cu8%3E-for-DynamicModInt%3CMOD%3E"],[27,"impl-From%3Ci32%3E-for-DynamicModInt%3CMOD%3E"],[28,"impl-From%3Ci128%3E-for-DynamicModInt%3CMOD%3E"],[29,"impl-From%3Cisize%3E-for-DynamicModInt%3CMOD%3E"],[30,"impl-From%3Ci64%3E-for-DynamicModInt%3CMOD%3E"],[37,"impl-ModInt-for-DynamicModInt%3CMOD%3E"],[38,"impl-DynamicModInt%3CMOD%3E"],[40,"impl-MulAssign-for-DynamicModInt%3CMOD%3E"],[41,"impl-MulAssign%3CT%3E-for-DynamicModInt%3CMOD%3E"],[43,"impl-DynamicModInt%3CMOD%3E"],[44,"impl-ModInt-for-DynamicModInt%3CMOD%3E"],[48,"impl-ModInt-for-DynamicModInt%3CMOD%3E"],[49,"impl-DynamicModInt%3CMOD%3E"],[53,"impl-SubAssign%3CT%3E-for-DynamicModInt%3CMOD%3E"],[54,"impl-SubAssign-for-DynamicModInt%3CMOD%3E"],[61,"impl-ModInt-for-DynamicModInt%3CMOD%3E"],[62,"impl-DynamicModInt%3CMOD%3E"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAADwABAABAAoADQAKABkACQAkABwA","P":[[2,"MOD,T"],[4,"MOD"],[5,"T"],[7,"MOD"],[8,"T"],[9,""],[10,"MOD"],[12,"MOD,T"],[13,"MOD"],[14,"MOD,T"],[15,"MOD"],[23,"T"],[24,"MOD"],[32,""],[33,"MOD,__H"],[34,"U"],[35,"MOD"],[36,""],[39,"MOD,T"],[40,"MOD"],[41,"MOD,T"],[42,"MOD"],[43,"T,MOD"],[45,"MOD"],[47,"T,I,MOD"],[48,"MOD"],[50,""],[52,"MOD,T"],[54,"MOD"],[55,"T,I,MOD"],[56,"T"],[57,""],[58,"U,T"],[59,"U"],[60,""],[61,"MOD"]]}],["dynamic_segtree",{"t":"FNNNNNNNNNNNNN","n":["DynamicSegTree","all_prod","borrow","borrow_mut","fmt","from","get","into","new","prod","set","try_from","try_into","type_id"],"q":[[0,"dynamic_segtree"],[14,"algebra"],[15,"core::fmt"],[16,"core::ops::range"],[17,"core::result"],[18,"core::any"]],"i":"`b000000000000","f":"`{{{d{{b{c}}}}}{}f}{d{{d{c}}}{}}{{{d{h}}}{{d{hc}}}{}}{{{d{{b{c}}}}{d{hj}}}l{nf}}{cc{}}{{{d{{b{c}}}}A`}{}f}{{}c{}}{A`{{b{c}}}f}{{{d{{b{c}}}}e}{}f{{Ab{A`}}}}{{{d{h{b{c}}}}A`}Adf}{c{{Af{e}}}{}{}}{{}{{Af{c}}}{}}{dAh}","D":"h","p":[[5,"DynamicSegTree",0],[1,"reference",null,null,1],[10,"Monoid",14],[0,"mut"],[5,"Formatter",15],[8,"Result",15],[10,"Debug",15],[1,"usize"],[10,"RangeBounds",16],[1,"unit"],[6,"Result",17,null,1],[5,"TypeId",18]],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAAoAAwABAAQABwAAAAoABAA=","P":[[1,"M"],[2,"T"],[4,"M"],[5,"T"],[6,"M"],[7,"U"],[8,"M"],[9,"M,R"],[10,"M"],[11,"U,T"],[12,"U"],[13,""]]}],["enumerate_inv_mods",{"t":"H","n":["enumerate_invs"],"q":[[0,"enumerate_inv_mods"],[1,"alloc::vec"],[2,"internal_modint"]],"i":"`","f":"{b{{d{c}}}f}","D":"b","p":[[1,"usize"],[5,"Vec",1],[10,"ModInt",2]],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OjAAAAEAAAAAAAAAEAAAAAAA","P":[[0,"M"]]}],["euler_tour",{"t":"FFNNNNNOOONNNNNNNONNNNNNNNN","n":["EulerTour","MinMonoid","binary_operation","borrow","","borrow_mut","","depth","euler_tour_vertex","first_occurrence","fmt","","from","","id_element","into","","last_occurrence","lca","lca_multiple","new","try_from","","try_into","","type_id",""],"q":[[0,"euler_tour"],[27,"alloc::vec"],[28,"core::fmt"],[29,"core::result"],[30,"core::any"]],"i":"``j0f1000010101100000101010","f":"``{{{b{c}}{b{c}}}c{}}{b{{b{c}}}{}}0{{{b{d}}}{{b{dc}}}{}}0{fh}00{{{b{j}}{b{dl}}}n}{{{b{f}}{b{dl}}}n}{cc{}}0{{}c{}}{{}c{}}05{{{b{f}}A`A`}A`}{{{b{f}}{b{{Ab{A`}}}}}A`}{{{b{{Ab{{h{A`}}}}}}A`}f}{c{{Ad{e}}}{}{}}0{{}{{Ad{c}}}{}}0{bAf}0","D":"Af","p":[[1,"reference",null,null,1],[0,"mut"],[5,"EulerTour",0],[5,"Vec",27],[5,"MinMonoid",0],[5,"Formatter",28],[8,"Result",28],[1,"usize"],[1,"slice"],[6,"Result",29,null,1],[5,"TypeId",30]],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OzAAAAEAABAABQABAAYACwABAA8AAAAUAAAAFgAFAA==","P":[[2,"Monoid::Target"],[3,"T"],[7,""],[12,"T"],[14,"Monoid::Target"],[15,"U"],[17,""],[21,"U,T"],[23,"U"],[25,""]]}],["eulerian_trail",{"t":"HHH","n":["eulerian_trail_from_edge_list","eulerian_trail_from_matrix","eulerian_trail_from_vertex_list"],"q":[[0,"eulerian_trail"],[3,"alloc::vec"]],"i":"```","f":"{{b{f{{f{{d{bb}}}}}}h}{{d{{f{b}}{f{b}}}}}}{{b{f{{f{b}}}}h}{{f{b}}}}0","D":"h","p":[[1,"usize"],[1,"tuple",null,null,1],[5,"Vec",3],[1,"bool"]],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OjAAAAAAAAA=","P":[]}],["fenwick_tree",{"t":"FNNNNNNNNNNNNNNNNNNN","n":["FenwickTree","add","borrow","borrow_mut","clone","clone_into","clone_to_uninit","eq","fmt","from","get","into","lower_bound","new","set","sum","to_owned","try_from","try_into","type_id"],"q":[[0,"fenwick_tree"],[20,"core::clone"],[21,"core::ops::arith"],[22,"core::cmp"],[23,"core::fmt"],[24,"core::ops::range"],[25,"core::result"],[26,"core::any"]],"i":"`d000000000000000000","f":"`{{{f{b{d{c}}}}hc}j{ln{Ab{}{{A`{}}}}}}{f{{f{c}}}{}}{{{f{b}}}{{f{bc}}}{}}{{{f{{d{c}}}}}{{d{c}}}{lln{Ab{}{{A`{}}}}}}{{f{f{bc}}}j{}}{{fAd}j}{{{f{{d{c}}}}{f{{d{c}}}}}Af{Ahln{Ab{}{{A`{}}}}}}{{{f{{d{c}}}}{f{bAj}}}Al{Anln{Ab{}{{A`{}}}}}}{cc{}}{{{f{{d{c}}}}h}c{ln{Ab{}{{A`{}}}}}}{{}c{}}{{{f{{d{c}}}}c}h{B`Bbln{Ab{}{{A`{}}}}}}{{hc}{{d{c}}}{}}<{{{f{{d{c}}}}e}c{ln{Ab{}{{A`{}}}}}{{Bd{h}}}}{fc{}}{c{{Bf{e}}}{}{}}{{}{{Bf{c}}}{}}{fBh}","D":"f","p":[[0,"mut"],[5,"FenwickTree",0],[1,"reference",null,null,1],[1,"usize"],[1,"unit"],[10,"Clone",20],[10,"AddAssign",21],[17,"Output"],[10,"Sub",21],[1,"u8"],[1,"bool"],[10,"PartialEq",22],[5,"Formatter",23],[8,"Result",23],[10,"Debug",23],[10,"PartialOrd",22],[10,"SubAssign",21],[10,"RangeBounds",24],[6,"Result",25,null,1],[5,"TypeId",26]],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OzAAAAEAABEAAwAAAAkACwAAAA4ABgA=","P":[[1,"T"],[6,""],[7,"T"],[11,"U"],[12,"T"],[15,"T,R"],[16,"T"],[17,"U,T"],[18,"U"],[19,""]]}],["floor_ceil_sum",{"t":"HH","n":["ceil_sum","floor_sum"],"q":[[0,"floor_ceil_sum"]],"i":"``","f":"{{bbbb}b}0","D":"d","p":[[1,"i64"]],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OjAAAAEAAAAAAAAAEAAAAAAA","P":[]}],["fps_utils",{"t":"FNNNNNNHNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNN","n":["Fps","add","","add_assign","","borrow","borrow_mut","bostan_mori","clone","clone_into","clone_to_uninit","data","differential","eq","exp","fmt","","from","","integral","into","inverse","is_empty","len","log","mul","","mul_assign","","","neg","new","sub","","sub_assign","","to_owned","to_string","truncate","try_from","try_into","type_id"],"q":[[0,"fps_utils"],[42,"ntt"],[43,"core::clone"],[44,"alloc::vec"],[45,"core::cmp"],[46,"core::fmt"],[47,"alloc::string"],[48,"core::result"],[49,"core::any"]],"i":"`b00000`0000000000000000000000000000000000","f":"`{{{b{c}}e}gd{}{}}{{{f{{b{c}}}}e}gd{}{}}{{{f{h{b{c}}}}{f{{b{c}}}}}jd}{{{f{h{b{c}}}}{b{c}}}jd}{f{{f{c}}}{}}{{{f{h}}}{{f{hc}}}{}}{{{f{{b{c}}}}{f{{b{c}}}}l}cd}{{{f{{b{c}}}}}{{b{c}}}{nd}}{{f{f{hc}}}j{}}{{fA`}j}{bAb}{{{f{{b{c}}}}}{{b{c}}}d}{{{f{{b{c}}}}{f{{b{c}}}}}Ad{Afd}}{{{f{{b{c}}}}Ah}{{b{c}}}d}{{{f{{b{c}}}}{f{hAj}}}Ald}{{{f{{b{c}}}}{f{hAj}}}Al{And}}{cc{}}{{{Ab{c}}}{{b{c}}}d}6{{}c{}}5{{{f{{b{c}}}}}Add}{{{f{{b{c}}}}}Ahd}7{{{f{{b{c}}}}e}gd{}{}}{{{b{c}}e}gd{}{}}{{{f{h{b{c}}}}{b{c}}}jd}{{{f{h{b{c}}}}{f{{b{c}}}}}jd}{{{f{h{b{c}}}}c}jd}{{{b{c}}}ed{}}{Ah{{b{c}}}d}{{{b{c}}e}gd{}{}}{{{f{{b{c}}}}e}gd{}{}}65{fc{}}{fB`}{{{f{{b{c}}}}Ah}{{b{c}}}d}{c{{Bb{e}}}{}{}}{{}{{Bb{c}}}{}}{fBd}","D":"Ab","p":[[5,"Fps",0],[10,"ConvHelper",42],[1,"reference",null,null,1],[0,"mut"],[1,"unit"],[1,"u64"],[10,"Clone",43],[1,"u8"],[5,"Vec",44],[1,"bool"],[10,"PartialEq",45],[1,"usize"],[5,"Formatter",46],[8,"Result",46],[10,"Debug",46],[5,"String",47],[6,"Result",48,null,1],[5,"TypeId",49]],"r":[],"b":[[1,"impl-Add%3CS%3E-for-Fps%3CT%3E"],[2,"impl-Add%3CS%3E-for-%26Fps%3CT%3E"],[3,"impl-AddAssign%3C%26Fps%3CT%3E%3E-for-Fps%3CT%3E"],[4,"impl-AddAssign-for-Fps%3CT%3E"],[15,"impl-Display-for-Fps%3CT%3E"],[16,"impl-Debug-for-Fps%3CT%3E"],[25,"impl-Mul%3CS%3E-for-%26Fps%3CT%3E"],[26,"impl-Mul%3CS%3E-for-Fps%3CT%3E"],[27,"impl-MulAssign-for-Fps%3CT%3E"],[28,"impl-MulAssign%3C%26Fps%3CT%3E%3E-for-Fps%3CT%3E"],[29,"impl-MulAssign%3CT%3E-for-Fps%3CT%3E"],[32,"impl-Sub%3CS%3E-for-Fps%3CT%3E"],[33,"impl-Sub%3CS%3E-for-%26Fps%3CT%3E"],[34,"impl-SubAssign-for-Fps%3CT%3E"],[35,"impl-SubAssign%3C%26Fps%3CT%3E%3E-for-Fps%3CT%3E"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAACEACAAAAAcACQADAA4AAAAQAAEAEwAAABcAAQAaAAwAKAACAA==","P":[[1,"T,S,Add::Output"],[3,"T"],[10,""],[12,"T"],[20,"U"],[21,"T"],[25,"T,S,Mul::Output"],[27,"T"],[30,"T,Neg::Output"],[31,"T"],[32,"T,S,Sub::Output"],[34,"T"],[37,""],[38,"T"],[39,"U,T"],[40,"U"],[41,""]]}],["geometry_basics",{"t":"FNNNNNNNNNNNNNNNNNNNNNNNNNNOO","n":["Point","add","borrow","borrow_mut","clone","clone_into","clone_to_uninit","cmp","cross","dot","eq","fmt","","from","","hash","into","mul","new","partial_cmp","square_dist","sub","to_owned","to_string","try_from","try_into","type_id","x","y"],"q":[[0,"geometry_basics"],[29,"core::cmp"],[30,"core::fmt"],[31,"core::hash"],[32,"core::option"],[33,"alloc::string"],[34,"core::result"],[35,"core::any"]],"i":"`b000000000000000000000000000","f":"`{{bb}c{}}{d{{d{c}}}{}}{{{d{f}}}{{d{fc}}}{}}{{{d{b}}}b}{{d{d{fc}}}h{}}{{dj}h}{{{d{b}}{d{b}}}l}{{bb}n}0{{{d{b}}{d{b}}}A`}{{{d{b}}{d{fAb}}}Ad}0{{{Af{nn}}}b}{cc{}}{{{d{b}}{d{fc}}}hAh}{{}c{}}{{bn}c{}}{{nn}b}{{{d{b}}{d{b}}}{{Aj{l}}}}{bn}{{bb}c{}}{dc{}}{dAl}{c{{An{e}}}{}{}}{{}{{An{c}}}{}}{dB`}66","D":"l","p":[[5,"Point",0],[1,"reference",null,null,1],[0,"mut"],[1,"unit"],[1,"u8"],[6,"Ordering",29],[1,"i64"],[1,"bool"],[5,"Formatter",30],[8,"Result",30],[1,"tuple",null,null,1],[10,"Hasher",31],[6,"Option",32,null,1],[5,"String",33],[6,"Result",34,null,1],[5,"TypeId",35]],"r":[],"b":[[11,"impl-Display-for-Point"],[12,"impl-Debug-for-Point"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAABcABgAAAAAAAgAGAAsAAwAQAAAAEgACABYABwA=","P":[[1,"Add::Output"],[2,"T"],[4,""],[5,"T"],[6,""],[14,"T"],[15,"__H"],[16,"U"],[17,"Mul::Output"],[18,""],[21,"Sub::Output"],[22,"T"],[23,""],[24,"U,T"],[25,"U"],[26,""]]}],["hld",{"t":"PPFGNNNNNNNONNNNONNNNONONONNNNNNN","n":["Ascending","Descending","HLD","Path","borrow","","borrow_mut","","clone","clone_into","clone_to_uninit","depth","fmt","","from","","hld_in","into","","lca","new","parent","path","sorted_graph","subtree","subtree_size","to_owned","try_from","","try_into","","type_id",""],"q":[[0,"hld"],[33,"alloc::vec"],[34,"core::fmt"],[35,"core::result"],[36,"core::any"]],"i":"f0``l1011110010100100000001010101","f":"````{b{{b{c}}}{}}0{{{b{d}}}{{b{dc}}}{}}0{{{b{f}}}f}{{b{b{dc}}}h{}}{{bj}h}{ln}{{{b{l}}{b{dA`}}}Ab}{{{b{f}}{b{dA`}}}Ab}{cc{}}03{{}c{}}0{{{b{l}}AdAd}Ad}{{{n{{n{Ad}}}}Ad}l}6{{{b{l}}AdAdAf}{{n{f}}}}7{{{b{l}}AdAf}{{Ah{AdAd}}}}8{bc{}}{c{{Aj{e}}}{}{}}0{{}{{Aj{c}}}{}}0{bAl}0","D":"B`","p":[[1,"reference",null,null,1],[0,"mut"],[6,"Path",0],[1,"unit"],[1,"u8"],[5,"HLD",0],[5,"Vec",33],[5,"Formatter",34],[8,"Result",34],[1,"usize"],[1,"bool"],[1,"tuple",null,null,1],[6,"Result",35,null,1],[5,"TypeId",36]],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OzAAAAEAABEABAAFAAYADQABABQAAQAbAAYA","P":[[4,"T"],[8,""],[9,"T"],[10,""],[14,"T"],[16,""],[17,"U"],[19,""],[26,"T"],[27,"U,T"],[29,"U"],[31,""]]}],["internal_bits",{"t":"H","n":["ceil_log2"],"q":[[0,"internal_bits"]],"i":"`","f":"{bb}","D":"b","p":[[1,"u32"]],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OjAAAAEAAAAAAAAAEAAAAAAA","P":[]}],["internal_modint",{"t":"KKNHMMNMMHM","n":["ModInt","RemEuclidU32","inv","inv_gcd","modulus","new","pow","raw","rem_euclid_u32","safe_mod","value"],"q":[[0,"internal_modint"]],"i":"``b`0000l`1","f":"``{{{d{b}}}b}{{ff}{{h{ff}}}}{{}j}{cbl}{{{d{b}}n}b}{jb}{{lj}j}{{ff}f}{{{d{b}}}j}","D":"d","p":[[10,"ModInt",0],[1,"reference",null,null,1],[1,"i64"],[1,"tuple",null,null,1],[1,"u32"],[10,"RemEuclidU32",0],[1,"u64"]],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAAkAAwAAAAEAAwAAAAUABgA=","P":[[5,"T"],[6,""]]}],["internal_type_traits",{"t":"KKKKKMMMM","n":["BoundedAbove","BoundedBelow","Integral","One","Zero","max_value","min_value","one","zero"],"q":[[0,"internal_type_traits"]],"i":"`````bdfh","f":"`````{{}b}{{}d}{{}f}{{}h}","D":"j","p":[[10,"BoundedAbove",0],[10,"BoundedBelow",0],[10,"One",0],[10,"Zero",0]],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OjAAAAEAAAAAAAQAEAAAAAAAAQACAAYABwA=","P":[]}],["lazy_segtree",{"t":"FNNNNNNNNNNNNNNNNNNN","n":["LazySegTree","all_prod","apply","apply_range","apply_range_commutative","borrow","borrow_mut","fmt","from","","get","into","max_right","min_left","new","prod","set","try_from","try_into","type_id"],"q":[[0,"lazy_segtree"],[20,"algebra"],[21,"core::ops::range"],[22,"core::fmt"],[23,"alloc::vec"],[24,"core::ops::function"],[25,"core::result"],[26,"core::any"]],"i":"`b000000000000000000","f":"`{{{d{{b{c}}}}}{}f}{{{d{h{b{c}}}}jd}lf}{{{d{h{b{c}}}}ed}lf{{n{j}}}}0{d{{d{c}}}{}}{{{d{h}}}{{d{hc}}}{}}{{{d{{b{c}}}}{d{hA`}}}Ab{Adf}}{cc{}}{Af{{b{c}}}f}{{{d{h{b{c}}}}j}{}f}{{}c{}}{{{d{h{b{c}}}}je}jf{{Al{d}{{Ah{Aj}}}}}}0{j{{b{c}}}f}{{{d{h{b{c}}}}e}{}f{{n{j}}}}{{{d{h{b{c}}}}j}lf}{c{{An{e}}}{}{}}{{}{{An{c}}}{}}{dB`}","D":"j","p":[[5,"LazySegTree",0],[1,"reference",null,null,1],[10,"ActionMonoid",20],[0,"mut"],[1,"usize"],[1,"unit"],[10,"RangeBounds",21],[5,"Formatter",22],[8,"Result",22],[10,"Debug",22],[5,"Vec",23],[17,"Output"],[1,"bool"],[10,"Fn",24],[6,"Result",25,null,1],[5,"TypeId",26]],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAA8ABAABAAIABgACAAoAAQANAAcA","P":[[1,"F"],[3,"F,R"],[5,"T"],[7,"F"],[8,"T"],[9,"F"],[11,"U"],[12,"F,G"],[14,"F"],[15,"F,R"],[16,"F"],[17,"U,T"],[18,"U"],[19,""]]}],["lazy_segtree_beats",{"t":"RKFMNMNNNNNMNNNMNNN","n":["Action","BeatsNode","LazySegtreeBeats","apply","apply_range","binary_operation","borrow","borrow_mut","fmt","from","","id_node","into","new","prod","push","try_from","try_into","type_id"],"q":[[0,"lazy_segtree_beats"],[19,"core::ops::range"],[20,"core::fmt"],[21,"alloc::vec"],[22,"core::result"],[23,"core::any"]],"i":"f``0l10000010001000","f":"```{{{h{b{f{}{{d{c}}}}}}{h{c}}}j{}}{{{h{b{l{c}}}}eh}nf{{Ab{A`}}}}{{{h{{f{}{{d{c}}}}}}{h{{f{}{{d{c}}}}}}}{{f{}{{d{c}}}}}{}}{h{{h{c}}}{}}{{{h{b}}}{{h{bc}}}{}}{{{h{{l{c}}}}{h{bAd}}}Af{Ahf}}{cc{}}{{{Aj{c}}}{{l{c}}}f}{{}{{f{}{{d{c}}}}}{}}{{}c{}}{A`{{l{c}}}f}{{{h{b{l{c}}}}e}cf{{Ab{A`}}}}{{{h{b{f{}{{d{c}}}}}}{h{b{f{}{{d{c}}}}}}{h{b{f{}{{d{c}}}}}}}n{}}{c{{Al{e}}}{}{}}{{}{{Al{c}}}{}}{hAn}","D":"l","p":[[0,"mut"],[17,"Action"],[10,"BeatsNode",0],[1,"reference",null,null,1],[1,"bool"],[5,"LazySegtreeBeats",0],[1,"unit"],[1,"usize"],[10,"RangeBounds",19],[5,"Formatter",20],[8,"Result",20],[10,"Debug",20],[5,"Vec",21],[6,"Result",22,null,1],[5,"TypeId",23]],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAA0ABgABAAAAAwAAAAUABAALAAEADgABABEAAgA=","P":[[3,"BeatsNode::Action"],[4,"Node,R"],[5,"BeatsNode::Action"],[6,"T"],[8,"Node"],[9,"T"],[10,"Node"],[11,"BeatsNode::Action"],[12,"U"],[13,"Node"],[14,"Node,R"],[15,"BeatsNode::Action"],[16,"U,T"],[17,"U"],[18,""]]}],["lazy_segtree_utils",{"t":"IIIKIIIMNNCMNNFFFFFFFFFFFFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN","n":["AddMaxLazySegTree","AddMinLazySegTree","AddSumLazySegTree","SumWrapper","UpdateMaxLazySegTree","UpdateMinLazySegTree","UpdateSumLazySegTree","from_vec","","","inner_types","prod_sum","","","AddAction","AddActionSum","AddMax","AddMin","AddSum","MaxMonoid","MinMonoid","SumMonoid","UpdateAction","UpdateActionSum","UpdateMax","UpdateMin","UpdateSum","apply","","","","binary_operation","","","borrow","","","","","","","","","","","","","borrow_mut","","","","","","","","","","","","","clone","","","","","","","","","","","","","clone_into","","","","","","","","","","","","","clone_to_uninit","","","","","","","","","","","","","composition","","","","eq","","","","","","","","","","","","","fmt","","","","","","","","","","","","","from","","","","","","","","","","","","","","","","","","","","","id_action","","","","id_element","","","into","","","","","","","","","","","","","to_owned","","","","","","","","","","","","","try_from","","","","","","","","","","","","","try_into","","","","","","","","","","","","","type_id","","","","","","","","","","","",""],"q":[[0,"lazy_segtree_utils"],[14,"lazy_segtree_utils::inner_types"],[222,"alloc::vec"],[223,"internal_type_traits"],[224,"core::ops::arith"],[225,"core::marker"],[226,"core::fmt"],[227,"core::ops::range"],[228,"core::clone"],[229,"core::cmp"],[230,"core::result"],[231,"core::any"]],"i":"```````dfAh`210`````````````BbBfBhBjBlC`Cb2106543CdCfChCjClCn876<;:9543210876<;:9543210876<;:9543210876<;:9543210<;:9876<;:9543210876<;:9543210876<<<;;;:::999543210<;:9876876<;:9543210876<;:9543210876<;:9543210876<;:9543210876<;:9543210","f":"```````{{{b{c}}}d{}}{{{b{c}}}{{f{c}}}{hj{n{}{{l{}}}}A`{Ab{}{{l{}}}}AdAf}}{{{b{c}}}{{Ah{c}}}{AfAd{Ab{}{{l{}}}}hj{n{}{{l{}}}}}}`{{{Al{Ajd}}c}e{{B`{An}}}{}}{{{Al{Aj{f{c}}}}e}c{hj{n{}{{l{}}}}A`{Ab{}{{l{}}}}AdAf}{{B`{An}}}}{{{Al{Aj{Ah{c}}}}e}c{AfAd{Ab{}{{l{}}}}hj{n{}{{l{}}}}}{{B`{An}}}}`````````````{{{Al{{Bb{c}}}}{Al{Aje}}}Bd{hA`AdAf}{}}{{{Al{{Bf{c}}}}{Al{Aje}}}Bd{hA`{Ab{}{{l{}}}}AdAf}{}}{{{Al{{Bh{c}}}}{Al{Aje}}}Bd{AfAd}{}}{{{Al{{Bj{c}}}}{Al{Aje}}}Bd{AfAd{Ab{}{{l{}}}}}{}}{{{Al{c}}{Al{c}}}c{}}00{Al{{Al{c}}}{}}000000000000{{{Al{Aj}}}{{Al{Ajc}}}{}}000000000000{{{Al{{Bl{c}}}}}{{Bl{c}}}Bn}{{{Al{{C`{c}}}}}{{C`{c}}}Bn}{{{Al{{Cb{c}}}}}{{Cb{c}}}Bn}{{{Al{{Bb{c}}}}}{{Bb{c}}}Bn}{{{Al{{Bf{c}}}}}{{Bf{c}}}Bn}{{{Al{{Bh{c}}}}}{{Bh{c}}}Bn}{{{Al{{Bj{c}}}}}{{Bj{c}}}Bn}{{{Al{{Cd{c}}}}}{{Cd{c}}}Bn}{{{Al{{Cf{c}}}}}{{Cf{c}}}Bn}{{{Al{{Ch{c}}}}}{{Ch{c}}}Bn}{{{Al{{Cj{c}}}}}{{Cj{c}}}Bn}{{{Al{{Cl{c}}}}}{{Cl{c}}}Bn}{{{Al{{Cn{c}}}}}{{Cn{c}}}Bn}{{Al{Al{Ajc}}}Bd{}}000000000000{{AlD`}Bd}000000000000{{{Al{Aj{Bb{c}}}}{Al{{Bb{c}}}}}Bd{hA`AdAf}}{{{Al{Aj{Bf{c}}}}{Al{{Bf{c}}}}}Bd{hA`{Ab{}{{l{}}}}AdAf}}{{{Al{Aj{Bh{c}}}}{Al{{Bh{c}}}}}Bd{AfAd}}{{{Al{Aj{Bj{c}}}}{Al{{Bj{c}}}}}Bd{AfAd{Ab{}{{l{}}}}}}{{{Al{{Bl{c}}}}{Al{{Bl{c}}}}}DbDd}{{{Al{{C`{c}}}}{Al{{C`{c}}}}}DbDd}{{{Al{{Cb{c}}}}{Al{{Cb{c}}}}}DbDd}{{{Al{{Bb{c}}}}{Al{{Bb{c}}}}}DbDd}{{{Al{{Bf{c}}}}{Al{{Bf{c}}}}}DbDd}{{{Al{{Bh{c}}}}{Al{{Bh{c}}}}}DbDd}{{{Al{{Bj{c}}}}{Al{{Bj{c}}}}}DbDd}{{{Al{{Cd{c}}}}{Al{{Cd{c}}}}}DbDd}{{{Al{{Cf{c}}}}{Al{{Cf{c}}}}}DbDd}{{{Al{{Ch{c}}}}{Al{{Ch{c}}}}}DbDd}{{{Al{{Cj{c}}}}{Al{{Cj{c}}}}}DbDd}{{{Al{{Cl{c}}}}{Al{{Cl{c}}}}}DbDd}{{{Al{{Cn{c}}}}{Al{{Cn{c}}}}}DbDd}{{{Al{{Bl{c}}}}{Al{AjDf}}}DhAf}{{{Al{{C`{c}}}}{Al{AjDf}}}DhAf}{{{Al{{Cb{c}}}}{Al{AjDf}}}DhAf}{{{Al{{Bb{c}}}}{Al{AjDf}}}DhAf}{{{Al{{Bf{c}}}}{Al{AjDf}}}DhAf}{{{Al{{Bh{c}}}}{Al{AjDf}}}DhAf}{{{Al{{Bj{c}}}}{Al{AjDf}}}DhAf}{{{Al{{Cd{c}}}}{Al{AjDf}}}DhAf}{{{Al{{Cf{c}}}}{Al{AjDf}}}DhAf}{{{Al{{Ch{c}}}}{Al{AjDf}}}DhAf}{{{Al{{Cj{c}}}}{Al{AjDf}}}DhAf}{{{Al{{Cl{c}}}}{Al{AjDf}}}DhAf}{{{Al{{Cn{c}}}}{Al{AjDf}}}DhAf}{cc{}}00{Djc{}}{c{{Bb{c}}}{}}212{c{{Bf{c}}}{}}32{c{{Bh{c}}}{}}{c{{Bj{c}}}{}}54555555{{}{{Bb{c}}}{hA`AdAf}}{{}{{Bf{c}}}{hA`{Ab{}{{l{}}}}AdAf}}{{}{{Bh{c}}}{AfAd}}{{}{{Bj{c}}}{AfAd{Ab{}{{l{}}}}}}{{}c{}}00{{}c{}}000000000000{Alc{}}000000000000{c{{Dl{e}}}{}{}}000000000000{{}{{Dl{c}}}{}}000000000000{AlDn}000000000000","D":"Ch","p":[[5,"Vec",222],[10,"SumWrapper",0],[8,"AddSumLazySegTree",0],[10,"Zero",223],[10,"One",223],[17,"Output"],[10,"Add",224],[10,"AddAssign",224],[10,"Mul",224],[10,"Copy",225],[10,"Debug",226],[8,"UpdateSumLazySegTree",0],[0,"mut"],[1,"reference",null,null,1],[1,"usize"],[10,"RangeBounds",227],[5,"AddAction",14],[1,"unit"],[5,"AddActionSum",14],[5,"UpdateAction",14],[5,"UpdateActionSum",14],[5,"MaxMonoid",14],[10,"Clone",228],[5,"MinMonoid",14],[5,"SumMonoid",14],[5,"AddMax",14],[5,"AddMin",14],[5,"AddSum",14],[5,"UpdateMax",14],[5,"UpdateMin",14],[5,"UpdateSum",14],[1,"u8"],[1,"bool"],[10,"PartialEq",229],[5,"Formatter",226],[8,"Result",226],[1,"never"],[6,"Result",230,null,1],[5,"TypeId",231]],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAMIACQABAAIABQB8AIUAAQCIAAAAigAAAIwAAgCQAAAAlwAGAKsAMwA=","P":[[7,"T"],[11,"R,T"],[12,"T,R"],[27,"T,Action::Target"],[31,"Monoid::Target"],[34,"T"],[86,""],[99,"T"],[154,"Monoid::Target"],[157,"U"],[170,"T"],[183,"U,T"],[196,"U"],[209,""]]}],["localize_closure",{"t":"Q","n":["mlambda"],"q":[[0,"localize_closure"]],"i":"`","f":"`","D":"d","p":[],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OjAAAAAAAAA=","P":[]}],["lowlink",{"t":"FONNONNNNONONNNN","n":["LowLink","articulation_points","borrow","borrow_mut","bridges","fmt","from","into","is_bridge","low","new","ord","try_from","try_into","two_edge_cc","type_id"],"q":[[0,"lowlink"],[16,"alloc::vec"],[17,"core::fmt"],[18,"core::result"],[19,"core::any"]],"i":"`b00000000000000","f":"`{bd}{f{{f{c}}}{}}{{{f{h}}}{{f{hc}}}{}}2{{{f{b}}{f{hj}}}l}{cc{}}{{}c{}}{{{f{b}}nn}A`}6{{{f{{d{{d{n}}}}}}}b}7{c{{Ab{e}}}{}{}}{{}{{Ab{c}}}{}}{{{f{b}}}{{Ad{{d{{d{n}}}}{d{n}}}}}}{fAf}","D":"Ab","p":[[5,"LowLink",0],[5,"Vec",16],[1,"reference",null,null,1],[0,"mut"],[5,"Formatter",17],[8,"Result",17],[1,"usize"],[1,"bool"],[6,"Result",18,null,1],[1,"tuple",null,null,1],[5,"TypeId",19]],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OjAAAAEAAAAAAAcAEAAAAAAAAwAEAAYACgANAA4AEAA=","P":[[2,"T"],[4,""],[6,"T"],[7,"U"],[8,""],[12,"U,T"],[13,"U"],[14,""]]}],["matrix",{"t":"FFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN","n":["Matrix","UsualSemiring","add","add_assign","","borrow","","borrow_mut","","clone","","clone_into","","clone_to_uninit","","eq","","fmt","","from","","","","get","get_mut","into","","mul","","mul_assign","new","one","pow","sub","sub_assign","to_owned","","transpose","try_from","","try_into","","type_id","","unit","zero"],"q":[[0,"matrix"],[46,"algebra"],[47,"core::clone"],[48,"core::fmt"],[49,"core::cmp"],[50,"internal_type_traits"],[51,"core::ops::arith"],[52,"alloc::vec"],[53,"core::result"],[54,"core::any"]],"i":"``bl101010101010101011111010111011101101010110","f":"``{{{b{c}}{d{{b{c}}}}}{{b{c}}}f}{{{d{hc}}{d{c}}}j{}}{{{d{h{b{c}}}}{d{{b{c}}}}}jf}{d{{d{c}}}{}}0{{{d{h}}}{{d{hc}}}{}}0{{{d{{l{c}}}}}{{l{c}}}{nA`nAbAdAfAh{Al{}{{Aj{}}}}}}{{{d{{b{c}}}}}{{b{c}}}{nf}}{{d{d{hc}}}j{}}0{{dAn}j}0{{{d{{l{c}}}}{d{{l{c}}}}}B`{BbA`nAbAdAfAh{Al{}{{Aj{}}}}}}{{{d{{b{c}}}}{d{{b{c}}}}}B`{Bbf}}{{{d{{l{c}}}}{d{hBd}}}Bf{A`A`nAbAdAfAh{Al{}{{Aj{}}}}}}{{{d{{b{c}}}}{d{hBd}}}Bf{A`f}}{cc{}}{{{Bh{Bh}}}{{b{c}}}f}{{{Bj{Bj}}}{{b{c}}}f}2{{{d{{b{c}}}}BlBl}{}f}{{{d{h{b{c}}}}BlBl}{{d{h}}}f}{{}c{}}0{{{d{c}}{d{c}}}c{}}{{{b{c}}{d{{b{c}}}}}{{b{c}}}f}{{{d{h{b{c}}}}{d{{b{c}}}}}jf}{{BlBl}{{b{c}}}f}{{}c{}}{{{d{{b{c}}}}Bn}{{b{c}}}f}43{dc{}}0{{{d{{b{c}}}}}{{b{c}}}f}{c{{C`{e}}}{}{}}0{{}{{C`{c}}}{}}0{dCb}0{Bl{{b{c}}}f}7","D":"l","p":[[5,"Matrix",0],[1,"reference",null,null,1],[10,"Semiring",46],[0,"mut"],[1,"unit"],[5,"UsualSemiring",0],[10,"Clone",47],[10,"Debug",48],[10,"Eq",49],[10,"Zero",50],[10,"One",50],[10,"AddAssign",51],[17,"Output"],[10,"Mul",51],[1,"u8"],[1,"bool"],[10,"PartialEq",49],[5,"Formatter",48],[8,"Result",48],[1,"array"],[5,"Vec",52],[1,"usize"],[1,"u64"],[6,"Result",53,null,1],[5,"TypeId",54]],"r":[],"b":[[20,"impl-From%3C%5B%5B%3CT+as+Semiring%3E::Target;+W%5D;+H%5D%3E-for-Matrix%3CT%3E"],[21,"impl-From%3CVec%3CVec%3C%3CT+as+Semiring%3E::Target%3E%3E%3E-for-Matrix%3CT%3E"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAACgABQABAAAAAwAQABUAAQAYAAEAHAASAA==","P":[[2,"T"],[3,"Semiring::Target"],[4,"T"],[13,""],[15,"T"],[25,"U"],[27,"Semiring::Target"],[28,"T"],[31,"Semiring::Target"],[32,"T"],[38,"U,T"],[40,"U"],[42,""],[44,"T"],[45,"Semiring::Target"]]}],["maxflow",{"t":"FFNNNNNONNNNNNNNNONNNNNONNNNNONNNNNNN","n":["Edge","MaxFlow","add_edge","borrow","","borrow_mut","","cap","change_edge","clone","clone_into","clone_to_uninit","default","edges","eq","","flow","","flow_with_capacity","fmt","","from","","","get_edge","into","","min_cut","new","to","to_owned","try_from","","try_into","","type_id",""],"q":[[0,"maxflow"],[37,"internal_type_traits"],[38,"core::clone"],[39,"core::default"],[40,"alloc::vec"],[41,"core::cmp"],[42,"core::fmt"],[43,"core::result"],[44,"core::any"]],"i":"``dl101011111101101010101011101010101","f":"``{{{f{b{d{c}}}}hhc}hj}{f{{f{c}}}{}}0{{{f{b}}}{{f{bc}}}{}}0{l}{{{f{b{d{c}}}}hcc}nj}{{{f{{d{c}}}}}{{d{c}}}A`}{{f{f{bc}}}n{}}{{fAb}n}{{}{{d{c}}}Ad}{{{f{{d{c}}}}}{{Af{{l{c}}}}}j}{{{f{{l{c}}}}{f{{l{c}}}}}Ah{Ajj}}{{{f{{d{c}}}}{f{{d{c}}}}}AhAj}{{{f{b{d{c}}}}hh}cj}9{{{f{b{d{c}}}}hhc}cj}{{{f{{l{c}}}}{f{bAl}}}An{B`j}}{{{f{{d{c}}}}{f{bAl}}}AnB`}{cc{}}0{lh}{{{f{{d{c}}}}h}{{l{c}}}j}{{}c{}}0{{{f{{d{c}}}}h}{{Af{Ah}}}j}{h{{d{c}}}j}4{fc{}}{c{{Bb{e}}}{}{}}0{{}{{Bb{c}}}{}}0{fBd}0","D":"A`","p":[[0,"mut"],[5,"MaxFlow",0],[1,"reference",null,null,1],[1,"usize"],[10,"Integral",37],[5,"Edge",0],[1,"unit"],[10,"Clone",38],[1,"u8"],[10,"Default",39],[5,"Vec",40],[1,"bool"],[10,"PartialEq",41],[5,"Formatter",42],[8,"Result",42],[10,"Debug",42],[6,"Result",43,null,1],[5,"TypeId",44]],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAB0ABgABAAAAAwANABIAAAAUAAEAGAABABwACQA=","P":[[2,"Cap"],[3,"T"],[7,""],[8,"Cap"],[10,"T"],[11,""],[12,"Cap"],[17,""],[18,"Cap"],[21,"T"],[23,""],[24,"Cap"],[25,"U"],[27,"Cap"],[29,""],[30,"T"],[31,"U,T"],[33,"U"],[35,""]]}],["maxflow_lower_bound",{"t":"FNNNNNNNNNNNN","n":["MaxFlowLowerBound","add_edge","add_edge_with_lower_bound","borrow","borrow_mut","flow","from","get_edge","into","new","try_from","try_into","type_id"],"q":[[0,"maxflow_lower_bound"],[13,"internal_type_traits"],[14,"core::ops::range"],[15,"core::option"],[16,"maxflow"],[17,"core::result"],[18,"core::any"]],"i":"`d00000000000","f":"`{{{f{b{d{c}}}}hhc}hj}{{{f{b{d{c}}}}hhe}hj{{l{c}}}}{f{{f{c}}}{}}{{{f{b}}}{{f{bc}}}{}}{{{f{b{d{c}}}}hh}{{n{c}}}j}{cc{}}{{{f{{d{c}}}}h}{{A`{c}}}j}{{}c{}}{h{{d{c}}}j}{c{{Ab{e}}}{}{}}{{}{{Ab{c}}}{}}{fAd}","D":"l","p":[[0,"mut"],[5,"MaxFlowLowerBound",0],[1,"reference",null,null,1],[1,"usize"],[10,"Integral",13],[10,"RangeBounds",14],[6,"Option",15,null,1],[5,"Edge",16],[6,"Result",17,null,1],[5,"TypeId",18]],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OjAAAAEAAAAAAAcAEAAAAAEABAAFAAgACgALAAwADQA=","P":[[1,"Cap"],[2,"Cap,R"],[3,"T"],[5,"Cap"],[6,"T"],[7,"Cap"],[8,"U"],[9,"Cap"],[10,"U,T"],[11,"U"],[12,""]]}],["mincost_bflow",{"t":"FFNNNNNNNNNNNNNONONNNNNNNNOONNNNNNNNNN","n":["MinCostBFlow","MinCostBFlowResult","add_demand","add_edge","add_supply","borrow","","borrow_mut","","clone","","clone_into","","clone_to_uninit","","cost","default","flow","fmt","","from","","into","","mincost_bflow","new","potential","st_flow","st_mincost_freeflow","st_mincost_maxflow","to_owned","","try_from","","try_into","","type_id",""],"q":[[0,"mincost_bflow"],[38,"internal_type_traits"],[39,"core::ops::arith"],[40,"core::clone"],[41,"core::default"],[42,"alloc::vec"],[43,"core::fmt"],[44,"core::option"],[45,"core::result"],[46,"core::any"]],"i":"``d00Ab10101010100001010111001101010101","f":"``{{{f{b{d{c}}}}hc}j{l{A`{}{{n{}}}}}}{{{f{b{d{c}}}}hhccc}h{l{A`{}{{n{}}}}}}1{f{{f{c}}}{}}0{{{f{b}}}{{f{bc}}}{}}0{{{f{{Ab{c}}}}}{{Ab{c}}}Ad}{{{f{{d{c}}}}}{{d{c}}}{Adl{A`{}{{n{}}}}}}{{f{f{bc}}}j{}}0{{fAf}j}0{Ab}{{}{{Ab{c}}}Ah}{AbAj}{{{f{{Ab{c}}}}{f{bAl}}}AnB`}{{{f{{d{c}}}}{f{bAl}}}An{B`l{A`{}{{n{}}}}}}{cc{}}0{{}c{}}0{{{f{b{d{c}}}}}{{Bb{{f{{Ab{c}}}}}}}{l{A`{}{{n{}}}}}}{h{{d{c}}}{l{A`{}{{n{}}}}}}68{{{f{b{d{c}}}}hh}{{Bb{{f{{Ab{c}}}}}}}{l{A`{}{{n{}}}}}}0{fc{}}0{c{{Bd{e}}}{}{}}0{{}{{Bd{c}}}{}}0{fBf}0","D":"An","p":[[0,"mut"],[5,"MinCostBFlow",0],[1,"reference",null,null,1],[1,"usize"],[1,"unit"],[10,"Integral",38],[17,"Output"],[10,"Neg",39],[5,"MinCostBFlowResult",0],[10,"Clone",40],[1,"u8"],[10,"Default",41],[5,"Vec",42],[5,"Formatter",43],[8,"Result",43],[10,"Debug",43],[6,"Option",44,null,1],[6,"Result",45,null,1],[5,"TypeId",46]],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OzAAAAEAABcABgABAAEABgAJABEAAAATAAEAGgAAAB8ABwA=","P":[[2,"T"],[13,""],[16,"T"],[17,""],[18,"T"],[22,"U"],[24,"T"],[26,""],[28,"T"],[32,"U,T"],[34,"U"],[36,""]]}],["mo",{"t":"KFNNHNNNMNNNNNMMMM","n":["MoFuncs","MoRunner","borrow","borrow_mut","calc_mo_friendly_order","fmt","from","into","memo","new","run","try_from","try_into","type_id","x_minus","x_plus","y_minus","y_plus"],"q":[[0,"mo"],[18,"alloc::vec"],[19,"core::fmt"],[20,"core::result"],[21,"core::any"]],"i":"``n0`000Ad111110000","f":"``{b{{b{c}}}{}}{{{b{d}}}{{b{dc}}}{}}{{{b{{j{{h{ff}}}}}}ff}{{l{f}}}}{{{b{n}}{b{dA`}}}Ab}{cc{}}{{}c{}}{{{b{dAd}}f}Af}{{{b{{j{{h{ff}}}}}}ff}n}{{{b{n}}{b{dc}}}AfAd}{c{{Ah{e}}}{}{}}{{}{{Ah{c}}}{}}{bAj}5555","D":"Ah","p":[[1,"reference",null,null,1],[0,"mut"],[1,"usize"],[1,"tuple",null,null,1],[1,"slice"],[5,"Vec",18],[5,"MoRunner",0],[5,"Formatter",19],[8,"Result",19],[10,"MoFuncs",0],[1,"unit"],[6,"Result",20,null,1],[5,"TypeId",21]],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAAYAAwACAAIABgAAAAwAAgA=","P":[[2,"T"],[4,""],[6,"T"],[7,"U"],[8,""],[10,"M"],[11,"U,T"],[12,"U"],[13,""]]}],["modint_mersenne",{"t":"FKNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNN","n":["ModIntMersenne","RemEuclidU64","add","add_assign","","","","","","","","","","","borrow","borrow_mut","clone","clone_into","clone_to_uninit","div","div_assign","","","","","","","","","","","eq","fmt","","from","hash","into","inv","modulus","mul","mul_assign","","","","","","","","","","","neg","new","pow","rem_euclid_u64","sub","sub_assign","","","","","","","","","","","to_owned","to_string","try_from","try_into","type_id","value"],"q":[[0,"modint_mersenne"],[73,"core::fmt"],[74,"core::hash"],[75,"alloc::string"],[76,"core::result"],[77,"core::any"]],"i":"``b000000000000000000000000000000000000000000000000000Bf111111111111111111","f":"``{{bc}b{}}{{{f{db}}h}j}{{{f{db}}l}j}{{{f{db}}n}j}{{{f{db}}A`}j}{{{f{db}}Ab}j}{{{f{db}}Ad}j}{{{f{db}}Af}j}{{{f{db}}Ah}j}{{{f{db}}Aj}j}{{{f{db}}Al}j}{{{f{db}}b}j}{f{{f{c}}}{}}{{{f{d}}}{{f{dc}}}{}}{{{f{b}}}b}{{f{f{dc}}}j{}}{{fAd}j}{{bc}b{}}><8=:?9{{{f{db}}h}j}7<8{{{f{b}}{f{b}}}An}{{{f{b}}{f{dB`}}}Bb}0{cc{}}{{{f{b}}{f{dc}}}jBd}{{}c{}}9{{}Aj}7>{{{f{db}}Ah}j}{{{f{db}}Aj}j}{{{f{db}}n}j}{{{f{db}}Af}j}{{{f{db}}l}j}{{{f{db}}A`}j}<{{{f{db}}Ab}j}{{{f{db}}Ad}j}{{{f{db}}b}j}{bb}{cbBf}{{{f{b}}Aj}b}{Bfb}{{bc}b{}}<5{{{f{db}}h}j}78{{{f{db}}Al}j}<:;?={fc{}}{fBh}{c{{Bj{e}}}{}{}}{{}{{Bj{c}}}{}}{fBl}{{{f{b}}}Aj}","D":"d","p":[[5,"ModIntMersenne",0],[0,"mut"],[1,"reference",null,null,1],[1,"i32"],[1,"unit"],[1,"usize"],[1,"u32"],[1,"u16"],[1,"i8"],[1,"u8"],[1,"isize"],[1,"i16"],[1,"u64"],[1,"i64"],[1,"bool"],[5,"Formatter",73],[8,"Result",73],[10,"Hasher",74],[10,"RemEuclidU64",0],[5,"String",75],[6,"Result",76,null,1],[5,"TypeId",77]],"r":[],"b":[[3,"impl-AddAssign%3Ci32%3E-for-ModIntMersenne"],[4,"impl-AddAssign%3Cusize%3E-for-ModIntMersenne"],[5,"impl-AddAssign%3Cu32%3E-for-ModIntMersenne"],[6,"impl-AddAssign%3Cu16%3E-for-ModIntMersenne"],[7,"impl-AddAssign%3Ci8%3E-for-ModIntMersenne"],[8,"impl-AddAssign%3Cu8%3E-for-ModIntMersenne"],[9,"impl-AddAssign%3Cisize%3E-for-ModIntMersenne"],[10,"impl-AddAssign%3Ci16%3E-for-ModIntMersenne"],[11,"impl-AddAssign%3Cu64%3E-for-ModIntMersenne"],[12,"impl-AddAssign%3Ci64%3E-for-ModIntMersenne"],[13,"impl-AddAssign-for-ModIntMersenne"],[20,"impl-DivAssign%3Cu32%3E-for-ModIntMersenne"],[21,"impl-DivAssign%3Ci8%3E-for-ModIntMersenne"],[22,"impl-DivAssign%3Cu64%3E-for-ModIntMersenne"],[23,"impl-DivAssign%3Cu16%3E-for-ModIntMersenne"],[24,"impl-DivAssign%3Cisize%3E-for-ModIntMersenne"],[25,"impl-DivAssign%3Cusize%3E-for-ModIntMersenne"],[26,"impl-DivAssign%3Ci16%3E-for-ModIntMersenne"],[27,"impl-DivAssign%3Ci32%3E-for-ModIntMersenne"],[28,"impl-DivAssign-for-ModIntMersenne"],[29,"impl-DivAssign%3Cu8%3E-for-ModIntMersenne"],[30,"impl-DivAssign%3Ci64%3E-for-ModIntMersenne"],[32,"impl-Debug-for-ModIntMersenne"],[33,"impl-Display-for-ModIntMersenne"],[40,"impl-MulAssign%3Ci64%3E-for-ModIntMersenne"],[41,"impl-MulAssign%3Ci16%3E-for-ModIntMersenne"],[42,"impl-MulAssign%3Cu64%3E-for-ModIntMersenne"],[43,"impl-MulAssign%3Cu32%3E-for-ModIntMersenne"],[44,"impl-MulAssign%3Cisize%3E-for-ModIntMersenne"],[45,"impl-MulAssign%3Cusize%3E-for-ModIntMersenne"],[46,"impl-MulAssign%3Cu16%3E-for-ModIntMersenne"],[47,"impl-MulAssign%3Ci32%3E-for-ModIntMersenne"],[48,"impl-MulAssign%3Ci8%3E-for-ModIntMersenne"],[49,"impl-MulAssign%3Cu8%3E-for-ModIntMersenne"],[50,"impl-MulAssign-for-ModIntMersenne"],[56,"impl-SubAssign%3Cu64%3E-for-ModIntMersenne"],[57,"impl-SubAssign-for-ModIntMersenne"],[58,"impl-SubAssign%3Ci32%3E-for-ModIntMersenne"],[59,"impl-SubAssign%3Cu8%3E-for-ModIntMersenne"],[60,"impl-SubAssign%3Ci8%3E-for-ModIntMersenne"],[61,"impl-SubAssign%3Ci64%3E-for-ModIntMersenne"],[62,"impl-SubAssign%3Cisize%3E-for-ModIntMersenne"],[63,"impl-SubAssign%3Cu16%3E-for-ModIntMersenne"],[64,"impl-SubAssign%3Cusize%3E-for-ModIntMersenne"],[65,"impl-SubAssign%3Ci16%3E-for-ModIntMersenne"],[66,"impl-SubAssign%3Cu32%3E-for-ModIntMersenne"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAEcAAwAAACIAJAAAACYAIwA=","P":[[2,"T"],[3,""],[14,"T"],[16,""],[17,"T"],[18,""],[19,"T"],[20,""],[34,"T"],[35,"__H"],[36,"U"],[37,""],[39,"T"],[40,""],[52,"T"],[53,""],[55,"T"],[56,""],[67,"T"],[68,""],[69,"U,T"],[70,"U"],[71,""]]}],["monoid_utils",{"t":"FFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN","n":["MaxMonoid","MinMonoid","binary_operation","","borrow","","borrow_mut","","clone","","clone_into","","clone_to_uninit","","eq","","fmt","","from","","id_element","","into","","to_owned","","try_from","","try_into","","type_id",""],"q":[[0,"monoid_utils"],[32,"core::clone"],[33,"internal_type_traits"],[34,"core::cmp"],[35,"core::fmt"],[36,"core::result"],[37,"core::any"]],"i":"``fl1010101010101010101010101010","f":"``{{{b{c}}{b{c}}}c{}}0{b{{b{c}}}{}}0{{{b{d}}}{{b{dc}}}{}}0{{{b{{f{c}}}}}{{f{c}}}{hj}}{{{b{{l{c}}}}}{{l{c}}}{hj}}{{b{b{dc}}}n{}}0{{bA`}n}0{{{b{{f{c}}}}{b{{f{c}}}}}Ab{Adj}}{{{b{{l{c}}}}{b{{l{c}}}}}Ab{Adj}}{{{b{{f{c}}}}{b{dAf}}}Ah{Ajj}}{{{b{{l{c}}}}{b{dAf}}}Ah{Ajj}}{cc{}}0{{}c{}}0{{}c{}}0{bc{}}0{c{{Al{e}}}{}{}}0{{}{{Al{c}}}{}}0{bAn}0","D":"j","p":[[1,"reference",null,null,1],[0,"mut"],[5,"MaxMonoid",0],[10,"Clone",32],[10,"Integral",33],[5,"MinMonoid",0],[1,"unit"],[1,"u8"],[1,"bool"],[10,"PartialEq",34],[5,"Formatter",35],[8,"Result",35],[10,"Debug",35],[6,"Result",36,null,1],[5,"TypeId",37]],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OzAAAAEAABsAAwABABEAFQABABkABwA=","P":[[2,"Monoid::Target"],[4,"T"],[12,""],[14,"T"],[20,"Monoid::Target"],[22,"U"],[24,"T"],[26,"U,T"],[28,"U"],[30,""]]}],["multiset",{"t":"FNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN","n":["MultiSet","borrow","borrow_mut","buf","buf_mut","clone","clone_into","clone_to_uninit","cmp","contains_key","count","default","eq","fmt","from","","hash","insert_bunch","insert_one","into","is_empty","max_key","min_key","new","partial_cmp","remove_all","remove_bunch","remove_one","to_owned","try_from","try_into","type_id"],"q":[[0,"multiset"],[32,"alloc::collections::btree::map"],[33,"core::cmp"],[34,"core::clone"],[35,"core::marker"],[36,"core::borrow"],[37,"core::fmt"],[38,"alloc::vec"],[39,"core::hash"],[40,"core::option"],[41,"core::result"],[42,"core::any"]],"i":"`f000000000000000000000000000000","f":"`{b{{b{c}}}{}}{{{b{d}}}{{b{dc}}}{}}{{{b{{f{c}}}}}{{b{{j{ch}}}}}l}{{{b{d{f{c}}}}}{{b{d{j{ch}}}}}l}{{{b{{f{c}}}}}{{f{c}}}{nl}}{{b{b{dc}}}A`{}}{{bAb}A`}{{{b{{f{c}}}}{b{{f{c}}}}}Ad{ll}}{{{b{{f{e}}}}{b{c}}}Af{lAh}{{Aj{c}}l}}{{{b{{f{e}}}}{b{c}}}h{lAh}{{Aj{c}}l}}{{}{{f{h}}}}{{{b{{f{c}}}}{b{{f{c}}}}}Af{All}}{{{b{{f{c}}}}{b{dAn}}}B`{Bbl}}{{{Bd{c}}}{{f{c}}}l}{cc{}}{{{b{{f{c}}}}{b{de}}}A`{Bfl}Bh}{{{b{d{f{c}}}}ch}A`l}{{{b{d{f{c}}}}c}A`l}{{}c{}}{{{b{{f{c}}}}}Afl}{{{b{{f{c}}}}}{{Bj{{b{c}}}}}l}0{{}{{f{c}}}l}{{{b{{f{c}}}}{b{{f{c}}}}}{{Bj{Ad}}}{Bll}}{{{b{d{f{e}}}}{b{c}}}A`{lAh}{{Aj{c}}l}}{{{b{d{f{e}}}}{b{c}}h}A`{lAh}{{Aj{c}}l}}{{{b{d{f{e}}}}{b{c}}}Af{lAh}{{Aj{c}}l}}{bc{}}{c{{Bn{e}}}{}{}}{{}{{Bn{c}}}{}}{bC`}","D":"A`","p":[[1,"reference",null,null,1],[0,"mut"],[5,"MultiSet",0],[1,"usize"],[5,"BTreeMap",32],[10,"Ord",33],[10,"Clone",34],[1,"unit"],[1,"u8"],[6,"Ordering",33],[1,"bool"],[10,"Sized",35],[10,"Borrow",36],[10,"PartialEq",33],[5,"Formatter",37],[8,"Result",37],[10,"Debug",37],[5,"Vec",38],[10,"Hash",39],[10,"Hasher",39],[6,"Option",40,null,1],[10,"PartialOrd",33],[6,"Result",41,null,1],[5,"TypeId",42]],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OzAAAAEAABgABAABAA4AEQAAABUABAAdAAMA","P":[[1,"T"],[3,"K"],[6,"T"],[7,""],[8,"K"],[9,"Q,K"],[11,""],[12,"K"],[15,"T"],[16,"K,__H"],[17,"K"],[19,"U"],[20,"K"],[25,"Q,K"],[28,"T"],[29,"U,T"],[30,"U"],[31,""]]}],["next_permutation",{"t":"FNNNNNNHHNNN","n":["Permutations","borrow","borrow_mut","from","into","into_iter","next","next_permutation","permutations","try_from","try_into","type_id"],"q":[[0,"next_permutation"],[12,"core::option"],[13,"core::cmp"],[14,"core::clone"],[15,"alloc::vec"],[16,"core::result"],[17,"core::any"]],"i":"`f00000``000","f":"`{b{{b{c}}}{}}{{{b{d}}}{{b{dc}}}{}}{cc{}}{{}c{}}{{}c{}}{{{b{d{f{c}}}}}{{h{e}}}{jl}{}}{{{b{d{n{c}}}}}A`j}{{{Ab{c}}}{{f{c}}}{jl}}{c{{Ad{e}}}{}{}}{{}{{Ad{c}}}{}}{bAf}","D":"h","p":[[1,"reference",null,null,1],[0,"mut"],[5,"Permutations",0],[6,"Option",12,null,1],[10,"Ord",13],[10,"Clone",14],[1,"slice"],[1,"bool"],[5,"Vec",15],[6,"Result",16,null,1],[5,"TypeId",17]],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAAgAAwAAAAMABgABAAoAAgA=","P":[[1,"T"],[4,"U"],[5,"I"],[6,"T,Iterator::Item"],[7,"T"],[9,"U,T"],[10,"U"],[11,""]]}],["ntt",{"t":"KHMH","n":["ConvHelper","convolution","","convolution_i64"],"q":[[0,"ntt"],[4,"alloc::vec"]],"i":"``h`","f":"`{{{d{{b{c}}}}{d{{b{c}}}}}{{f{c}}}h}{{{d{{b{h}}}}{d{{b{h}}}}}{{f{h}}}}{{{d{{b{j}}}}{d{{b{j}}}}}{{f{j}}}}","D":"h","p":[[1,"slice"],[1,"reference",null,null,1],[5,"Vec",4],[10,"ConvHelper",0],[1,"i64"]],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OjAAAAEAAAAAAAAAEAAAAAMA","P":[[1,"M"],[2,""]]}],["partially_persistent_unionfind",{"t":"FNNNNNNNNNNNN","n":["PartiallyPersistentUnionFind","borrow","borrow_mut","from","into","leader","merge","new","same","size","try_from","try_into","type_id"],"q":[[0,"partially_persistent_unionfind"],[13,"core::result"],[14,"core::any"]],"i":"`f00000000000","f":"`{b{{b{c}}}{}}{{{b{d}}}{{b{dc}}}{}}{cc{}}{{}c{}}{{{b{f}}hh}h}{{{b{df}}hh}h}{hf}{{{b{f}}hhh}j}3{c{{l{e}}}{}{}}{{}{{l{c}}}{}}{bn}","D":"n","p":[[1,"reference",null,null,1],[0,"mut"],[5,"PartiallyPersistentUnionFind",0],[1,"usize"],[1,"bool"],[6,"Result",13,null,1],[5,"TypeId",14]],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAAYAAwABAAIACAAAAAsAAgA=","P":[[1,"T"],[4,"U"],[5,""],[10,"U,T"],[11,"U"],[12,""]]}],["pcg32",{"t":"FNNNNNNNNNNNNNNN","n":["Pcg32","borrow","borrow_mut","clone","clone_into","clone_to_uninit","fmt","from","init","init_rand","into","next_u32","to_owned","try_from","try_into","type_id"],"q":[[0,"pcg32"],[16,"core::fmt"],[17,"core::result"],[18,"core::any"]],"i":"`f00000000000000","f":"`{b{{b{c}}}{}}{{{b{d}}}{{b{dc}}}{}}{{{b{f}}}f}{{b{b{dc}}}h{}}{{bj}h}{{{b{f}}{b{dl}}}n}{cc{}}{A`f}{{}f}{{}c{}}{{{b{df}}}Ab}{bc{}}{c{{Ad{e}}}{}{}}{{}{{Ad{c}}}{}}{bAf}","D":"f","p":[[1,"reference",null,null,1],[0,"mut"],[5,"Pcg32",0],[1,"unit"],[1,"u8"],[5,"Formatter",16],[8,"Result",16],[1,"u64"],[1,"u32"],[6,"Result",17,null,1],[5,"TypeId",18]],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAA0AAwABAAYACQABAAwABAA=","P":[[1,"T"],[3,""],[4,"T"],[5,""],[7,"T"],[8,""],[10,"U"],[11,""],[12,"T"],[13,"U,T"],[14,"U"],[15,""]]}],["potentialized_unionfind",{"t":"FNNNNNNNNNNNNN","n":["PotentializedUnionFind","borrow","borrow_mut","diff","fmt","from","into","new","relate","root_and_diff","size","try_from","try_into","type_id"],"q":[[0,"potentialized_unionfind"],[14,"core::option"],[15,"algebra"],[16,"core::fmt"],[17,"core::result"],[18,"core::any"]],"i":"`f000000000000","f":"`{b{{b{c}}}{}}{{{b{d}}}{{b{dc}}}{}}{{{b{{f{c}}}}hh}jl}{{{b{{f{c}}}}{b{dn}}}A`{Abl}}{cc{}}{{}c{}}{h{{f{c}}}l}{{{b{d{f{c}}}}hh}{{Af{Ad}}}l}{{{b{{f{c}}}}h}{{Ah{h}}}l}{{{b{{f{c}}}}h}hl}{c{{Af{e}}}{}{}}{{}{{Af{c}}}{}}{bAj}","D":"n","p":[[1,"reference",null,null,1],[0,"mut"],[5,"PotentializedUnionFind",0],[1,"usize"],[6,"Option",14,null,1],[10,"Group",15],[5,"Formatter",16],[8,"Result",16],[10,"Debug",16],[1,"bool"],[6,"Result",17,null,1],[1,"tuple",null,null,1],[5,"TypeId",18]],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OjAAAAEAAAAAAAcAEAAAAAEAAgADAAUACAAMAA0ADgA=","P":[[1,"T"],[3,"M"],[5,"T"],[6,"U"],[7,"M"],[11,"U,T"],[12,"U"],[13,""]]}],["prime_utils",{"t":"FNNNNNHNNNNNNNNHNNNNNN","n":["Eratosthenes","borrow","borrow_mut","divisor_mobius","divisor_zeta","enumerate_divisors","euler_totient_function","factorize","factorize_range","from","gcd_convolution","get_primes","into","is_prime","is_prime_range","miller_rabin","multiple_mobius","multiple_zeta","new","try_from","try_into","type_id"],"q":[[0,"prime_utils"],[22,"alloc::vec"],[23,"core::ops::arith"],[24,"core::marker"],[25,"core::ops::function"],[26,"core::result"],[27,"core::any"]],"i":"`f0000`00000000`000000","f":"`{b{{b{c}}}{}}{{{b{d}}}{{b{dc}}}{}}{{{b{f}}{h{c}}}{{h{c}}}{{l{}{{j{}}}}n}}{{{b{f}}{h{c}}e}{{h{c}}}n{{A`{cc}{{j{c}}}}}}{{{b{f}}Ab}{{h{Ab}}}}{Ab{{h{Ab}}}}{{{b{f}}Ab}{{h{{Ad{AbAb}}}}}}{{{b{f}}AbAb}{{h{{h{{Ad{AbAb}}}}}}}}{cc{}}{{{b{f}}{b{{Af{c}}}}{b{{Af{c}}}}}{{h{c}}}{{Ah{}{{j{}}}}{l{}{{j{}}}}Ajn}}{{{b{f}}}{{b{{Af{Ab}}}}}}{{}c{}}{{{b{f}}Ab}Al}{{{b{f}}AbAb}{{h{Al}}}}{AnAl}<;{Abf}{c{{B`{e}}}{}{}}{{}{{B`{c}}}{}}{bBb}","D":"An","p":[[1,"reference",null,null,1],[0,"mut"],[5,"Eratosthenes",0],[5,"Vec",22],[17,"Output"],[10,"Sub",23],[10,"Copy",24],[10,"Fn",25],[1,"usize"],[1,"tuple",null,null,1],[1,"slice"],[10,"Add",23],[10,"MulAssign",23],[1,"bool"],[1,"u64"],[6,"Result",26,null,1],[5,"TypeId",27]],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OjAAAAEAAAAAAAcAEAAAAAEAAgADAAwADgAUABUAFgA=","P":[[1,"T"],[5,""],[9,"T"],[11,""],[12,"U"],[13,""],[16,"T"],[18,""],[19,"U,T"],[20,"U"],[21,""]]}],["range_chmin_max_add_sum",{"t":"FNNNNNNNNNNNNNNNN","n":["RangeChminMaxAddSum","borrow","borrow_mut","fmt","from","","into","prod_max","prod_min","prod_sum","range_add","range_chmax","range_chmin","range_update","try_from","try_into","type_id"],"q":[[0,"range_chmin_max_add_sum"],[17,"core::fmt"],[18,"alloc::vec"],[19,"core::ops::range"],[20,"core::result"],[21,"core::any"]],"i":"`f000000000000000","f":"`{b{{b{c}}}{}}{{{b{d}}}{{b{dc}}}{}}{{{b{f}}{b{dh}}}j}{cc{}}{{{n{l}}}f}{{}c{}}{{{b{df}}c}l{{Ab{A`}}}}00{{{b{df}}cl}Ad{{Ab{A`}}}}000{c{{Af{e}}}{}{}}{{}{{Af{c}}}{}}{bAh}","D":"j","p":[[1,"reference",null,null,1],[0,"mut"],[5,"RangeChminMaxAddSum",0],[5,"Formatter",17],[8,"Result",17],[1,"i64"],[5,"Vec",18],[1,"usize"],[10,"RangeBounds",19],[1,"unit"],[6,"Result",20,null,1],[5,"TypeId",21]],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAAwAAwABAAMABgAAAAoABwA=","P":[[1,"T"],[3,""],[4,"T"],[5,""],[6,"U"],[7,"R"],[14,"U,T"],[15,"U"],[16,""]]}],["raq_rsq",{"t":"FNNNNNNNNNNN","n":["RAQRSQ","add","add_point","borrow","borrow_mut","from","into","new","sum","try_from","try_into","type_id"],"q":[[0,"raq_rsq"],[12,"core::clone"],[13,"core::ops::arith"],[14,"core::convert"],[15,"core::ops::range"],[16,"core::result"],[17,"core::any"]],"i":"`d0000000000","f":"`{{{f{b{d{c}}}}ec}h{j{n{}{{l{}}}}A`{Ab{}{{l{}}}}{Ad{}{{l{}}}}Af{Ah{}{{l{}}}}}{{Al{Aj}}}}{{{f{b{d{c}}}}Ajc}h{j{n{}{{l{}}}}A`{Ab{}{{l{}}}}{Ad{}{{l{}}}}Af{Ah{}{{l{}}}}}}{f{{f{c}}}{}}{{{f{b}}}{{f{bc}}}{}}{cc{}}{{}c{}}{{Ajc}{{d{c}}}{}}{{{f{{d{c}}}}e}c{j{n{}{{l{}}}}A`{Ab{}{{l{}}}}{Ad{}{{l{}}}}Af{Ah{}{{l{}}}}}{{Al{Aj}}}}{c{{An{e}}}{}{}}{{}{{An{c}}}{}}{fB`}","D":"j","p":[[0,"mut"],[5,"RAQRSQ",0],[1,"reference",null,null,1],[1,"unit"],[10,"Clone",12],[17,"Output"],[10,"Add",13],[10,"AddAssign",13],[10,"Sub",13],[10,"Neg",13],[10,"From",14,null,1],[10,"Mul",13],[1,"usize"],[10,"RangeBounds",15],[6,"Result",16,null,1],[5,"TypeId",17]],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAAcAAwABAAAABAABAAgABAA=","P":[[1,"T,R"],[2,"T"],[6,"U"],[7,"T"],[8,"T,R"],[9,"U,T"],[10,"U"],[11,""]]}],["rerooting",{"t":"FNNNNNNNNNN","n":["Rerooting","borrow","borrow_mut","fmt","from","get_ans","into","new","try_from","try_into","type_id"],"q":[[0,"rerooting"],[11,"core::fmt"],[12,"algebra"],[13,"core::ops::function"],[14,"alloc::vec"],[15,"core::result"],[16,"core::any"]],"i":"`f000000000","f":"`{b{{b{c}}}{}}{{{b{d}}}{{b{dc}}}{}}{{{b{{f{ce}}}}{b{dh}}}j{lnA`}{l{Af{bAbAb}{{Ad{}}}}}}{cc{}}{{{b{{f{ce}}}}Ab}{}{nA`}{{Af{bAbAb}{{Ad{}}}}}}{{}c{}}{{{b{{Ah{{Ah{Ab}}}}}}c}{{f{ec}}}{{Af{bAbAb}{{Ad{}}}}}{nA`}}{c{{Aj{e}}}{}{}}{{}{{Aj{c}}}{}}{bAl}","D":"h","p":[[1,"reference",null,null,1],[0,"mut"],[5,"Rerooting",0],[5,"Formatter",11],[8,"Result",11],[10,"Debug",11],[10,"Monoid",12],[10,"Commutative",12],[1,"usize"],[17,"Output"],[10,"FnMut",13],[5,"Vec",14],[6,"Result",15,null,1],[5,"TypeId",16]],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAAcAAwABAAMABgAAAAkAAgA=","P":[[1,"T"],[3,"M,F"],[4,"T"],[5,"M,F"],[6,"U"],[7,"F,M"],[8,"U,T"],[9,"U"],[10,""]]}],["rolling_hash",{"t":"FNNNNNNNNNNNNNNNNNNNN","n":["RollingHash","borrow","borrow_mut","clone","clone_into","clone_to_uninit","eq","fmt","from","get_base_pow","get_hash","get_prefix_hash","get_random_base","into","is_empty","len","new","to_owned","try_from","try_into","type_id"],"q":[[0,"rolling_hash"],[21,"core::fmt"],[22,"modint_mersenne"],[23,"core::ops::range"],[24,"core::option"],[25,"core::marker"],[26,"core::result"],[27,"core::any"]],"i":"`f0000000000000000000","f":"`{b{{b{c}}}{}}{{{b{d}}}{{b{dc}}}{}}{{{b{f}}}f}{{b{b{dc}}}h{}}{{bj}h}{{{b{f}}{b{f}}}l}{{{b{f}}{b{dn}}}A`}{cc{}}{{{b{f}}Ab}Ad}{{{b{f}}c}Ad{{Af{Ab}}}}1{{}Ah}{{}c{}}{{{b{f}}}l}{{{b{f}}}Ab}{{{b{{Aj{c}}}}{Al{Ah}}}f{AnB`}}{bc{}}{c{{Bb{e}}}{}{}}{{}{{Bb{c}}}{}}{bBd}","D":"A`","p":[[1,"reference",null,null,1],[0,"mut"],[5,"RollingHash",0],[1,"unit"],[1,"u8"],[1,"bool"],[5,"Formatter",21],[8,"Result",21],[1,"usize"],[5,"ModIntMersenne",22],[10,"RangeBounds",23],[1,"u64"],[1,"slice"],[6,"Option",24,null,1],[10,"RemEuclidU64",22],[10,"Copy",25],[6,"Result",26,null,1],[5,"TypeId",27]],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAA0ABAAAAAAAAgAGAA8AAQASAAMA","P":[[1,"T"],[3,""],[4,"T"],[5,""],[8,"T"],[9,""],[10,"R"],[11,""],[13,"U"],[14,""],[16,"T"],[18,"U,T"],[19,"U"],[20,""]]}],["scc",{"t":"FNNNNNNNNNNNNNNNN","n":["SccGraph","add_edge","borrow","borrow_mut","clone","clone_into","clone_to_uninit","fmt","from","","into","new","scc","to_owned","try_from","try_into","type_id"],"q":[[0,"scc"],[17,"core::fmt"],[18,"alloc::vec"],[19,"core::result"],[20,"core::any"]],"i":"`d000000000000000","f":"`{{{f{bd}}hh}j}{f{{f{c}}}{}}{{{f{b}}}{{f{bc}}}{}}{{{f{d}}}d}{{f{f{bc}}}j{}}{{fl}j}{{{f{d}}{f{bn}}}A`}{cc{}}{{{Ab{{Ab{h}}}}}d}{{}c{}}{hd}{{{f{d}}}{{Ab{{Ab{h}}}}}}{fc{}}{c{{Ad{e}}}{}{}}{{}{{Ad{c}}}{}}{fAf}","D":"f","p":[[0,"mut"],[5,"SccGraph",0],[1,"reference",null,null,1],[1,"usize"],[1,"unit"],[1,"u8"],[5,"Formatter",17],[8,"Result",17],[5,"Vec",18],[6,"Result",19,null,1],[5,"TypeId",20]],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAA4AAwABAAcACgAAAAwABQA=","P":[[2,"T"],[4,""],[5,"T"],[6,""],[8,"T"],[9,""],[10,"U"],[11,""],[13,"T"],[14,"U,T"],[15,"U"],[16,""]]}],["segtree",{"t":"IIFNNNNNNNNNNNNNNNNNNNNN","n":["MaxSegTree","MinSegTree","SegTree","all_prod","borrow","borrow_mut","clone","clone_into","clone_to_uninit","eq","fmt","from","","get","into","max_right","min_left","new","prod","set","to_owned","try_from","try_into","type_id"],"q":[[0,"segtree"],[24,"algebra"],[25,"core::clone"],[26,"core::cmp"],[27,"core::fmt"],[28,"alloc::vec"],[29,"core::ops::function"],[30,"core::ops::range"],[31,"core::result"],[32,"core::any"]],"i":"```b00000000000000000000","f":"```{{{d{{b{c}}}}}{}f}{d{{d{c}}}{}}{{{d{h}}}{{d{hc}}}{}}{{{d{{b{c}}}}}{{b{c}}}{jf}}{{d{d{hc}}}l{}}{{dn}l}{{{d{{b{c}}}}{d{{b{c}}}}}A`{Abf}}{{{d{{b{c}}}}{d{hAd}}}Af{Ahf}}{cc{}}{{{d{Aj}}}{{b{c}}}f}{{{d{{b{c}}}}Al}{}f}{{}c{}}{{{d{{b{c}}}}Ale}Alf{{B`{d}{{An{A`}}}}}}0{Al{{b{c}}}f}{{{d{{b{c}}}}e}{}f{{Bb{Al}}}}{{{d{h{b{c}}}}Al}lf}{dc{}}{c{{Bd{e}}}{}{}}{{}{{Bd{c}}}{}}{dBf}","D":"f","p":[[5,"SegTree",0],[1,"reference",null,null,1],[10,"Monoid",24],[0,"mut"],[10,"Clone",25],[1,"unit"],[1,"u8"],[1,"bool"],[10,"PartialEq",26],[5,"Formatter",27],[8,"Result",27],[10,"Debug",27],[5,"Vec",28],[1,"usize"],[17,"Output"],[10,"Fn",29],[10,"RangeBounds",30],[6,"Result",31,null,1],[5,"TypeId",32]],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OzAAAAEAABUAAwABAAoADQABABAACAA=","P":[[3,"M"],[4,"T"],[6,"M"],[7,"T"],[8,""],[9,"M"],[11,"T"],[12,"M"],[14,"U"],[15,"M,F"],[17,"M"],[18,"M,R"],[19,"M"],[20,"T"],[21,"U,T"],[22,"U"],[23,""]]}],["segtree_2d_compressed",{"t":"FNNNNNNNNNNNNN","n":["SegTree2DCompressed","add","borrow","borrow_mut","fmt","from","get","into","new","prod","set","try_from","try_into","type_id"],"q":[[0,"segtree_2d_compressed"],[14,"algebra"],[15,"internal_type_traits"],[16,"core::fmt"],[17,"core::ops::range"],[18,"core::result"],[19,"core::any"]],"i":"`d000000000000","f":"`{{{f{b{d{ce}}}}ee}h{jl}n}{f{{f{c}}}{}}{{{f{b}}}{{f{bc}}}{}}{{{f{{d{ce}}}}{f{bA`}}}Ab{Adjl}{Adn}}{cc{}}{{{f{{d{ce}}}}ee}{}{jl}n}{{}c{}}{{{f{{Ah{{Af{cc}}}}}}}{{d{ec}}}n{jl}}{{{f{{d{ce}}}}gi}{}{jl}n{{Aj{e}}}{{Aj{e}}}}8{c{{Al{e}}}{}{}}{{}{{Al{c}}}{}}{fAn}","D":"l","p":[[0,"mut"],[5,"SegTree2DCompressed",0],[1,"reference",null,null,1],[1,"unit"],[10,"Monoid",14],[10,"Commutative",14],[10,"Integral",15],[5,"Formatter",16],[8,"Result",16],[10,"Debug",16],[1,"tuple",null,null,1],[1,"slice"],[10,"RangeBounds",17],[6,"Result",18,null,1],[5,"TypeId",19]],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAAgAAwADAAIABwAAAAoABAA=","P":[[1,"M,T"],[2,"T"],[4,"M,T"],[5,"T"],[6,"M,T"],[7,"U"],[8,"T,M"],[9,"M,T,R1,R2"],[10,"M,T"],[11,"U,T"],[12,"U"],[13,""]]}],["segtree_2d_dense",{"t":"FNNNNNNNNNNNNNN","n":["SegTree2DDense","all_prod","borrow","borrow_mut","fmt","from","","get","into","new","prod","set","try_from","try_into","type_id"],"q":[[0,"segtree_2d_dense"],[15,"algebra"],[16,"core::fmt"],[17,"alloc::vec"],[18,"core::ops::range"],[19,"core::result"],[20,"core::any"]],"i":"`b0000000000000","f":"`{{{d{{b{c}}}}}{}{fh}}{d{{d{c}}}{}}{{{d{j}}}{{d{jc}}}{}}{{{d{{b{c}}}}{d{jl}}}n{A`fh}}{cc{}}{{{d{{Ab{Ab}}}}}{{b{c}}}{fh}}{{{d{{b{c}}}}AdAd}{}{fh}}{{}c{}}{{AdAd}{{b{c}}}{fh}}{{{d{{b{c}}}}eg}{}{fh}{{Af{Ad}}}{{Af{Ad}}}}{{{d{j{b{c}}}}AdAd}Ah{fh}}{c{{Aj{e}}}{}{}}{{}{{Aj{c}}}{}}{dAl}","D":"f","p":[[5,"SegTree2DDense",0],[1,"reference",null,null,1],[10,"Monoid",15],[10,"Commutative",15],[0,"mut"],[5,"Formatter",16],[8,"Result",16],[10,"Debug",16],[5,"Vec",17],[1,"usize"],[10,"RangeBounds",18],[1,"unit"],[6,"Result",19,null,1],[5,"TypeId",20]],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAAwAAwABAAQABwABAAoABQA=","P":[[1,"M"],[2,"T"],[4,"M"],[5,"T"],[6,"M"],[8,"U"],[9,"M"],[10,"M,R1,R2"],[11,"M"],[12,"U,T"],[13,"U"],[14,""]]}],["sparse_table",{"t":"IIFNNNNNNNNNNNNNN","n":["MaxSparseTable","MinSparseTable","SparseTable","borrow","borrow_mut","clone","clone_into","clone_to_uninit","fmt","from","into","new","prod","to_owned","try_from","try_into","type_id"],"q":[[0,"sparse_table"],[17,"core::clone"],[18,"algebra"],[19,"core::fmt"],[20,"alloc::vec"],[21,"core::ops::range"],[22,"core::result"],[23,"core::any"]],"i":"```f0000000000000","f":"```{b{{b{c}}}{}}{{{b{d}}}{{b{dc}}}{}}{{{b{{f{c}}}}}{{f{c}}}{hj}}{{b{b{dc}}}l{}}{{bn}l}{{{b{{f{c}}}}{b{dA`}}}Ab{Adj}}{cc{}}{{}c{}}{Af{{f{c}}}j}{{{b{{f{c}}}}e}{}j{{Aj{Ah}}}}{bc{}}{c{{Al{e}}}{}{}}{{}{{Al{c}}}{}}{bAn}","D":"j","p":[[1,"reference",null,null,1],[0,"mut"],[5,"SparseTable",0],[10,"Clone",17],[10,"IdempotentMonoid",18],[1,"unit"],[1,"u8"],[5,"Formatter",19],[8,"Result",19],[10,"Debug",19],[5,"Vec",20],[1,"usize"],[10,"RangeBounds",21],[6,"Result",22,null,1],[5,"TypeId",23]],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAAwAAgABAAgADgADAA==","P":[[3,"T"],[5,"M"],[6,"T"],[7,""],[8,"M"],[9,"T"],[10,"U"],[11,"M"],[12,"M,R"],[13,"T"],[14,"U,T"],[15,"U"],[16,""]]}],["sparse_table_on_segtree",{"t":"FNNNNNNNNNN","n":["SparseTableOnSegTree","borrow","borrow_mut","fmt","from","into","new","prod","try_from","try_into","type_id"],"q":[[0,"sparse_table_on_segtree"],[11,"core::fmt"],[12,"algebra"],[13,"core::clone"],[14,"alloc::vec"],[15,"core::ops::range"],[16,"core::result"],[17,"core::any"]],"i":"`f000000000","f":"`{b{{b{c}}}{}}{{{b{d}}}{{b{dc}}}{}}{{{b{{f{c}}}}{b{dh}}}j{lnA`Ab}}{cc{}}{{}c{}}{{{Ad{Ad}}}{{f{c}}}{nA`Ab}}{{{b{{f{c}}}}eg}{}{nA`Ab}{{Ah{Af}}}{{Ah{Af}}Ab}}{c{{Aj{e}}}{}{}}{{}{{Aj{c}}}{}}{bAl}","D":"j","p":[[1,"reference",null,null,1],[0,"mut"],[5,"SparseTableOnSegTree",0],[5,"Formatter",11],[8,"Result",11],[10,"Debug",11],[10,"IdempotentMonoid",12],[10,"Commutative",12],[10,"Clone",13],[5,"Vec",14],[1,"usize"],[10,"RangeBounds",15],[6,"Result",16,null,1],[5,"TypeId",17]],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAAYAAgABAAMACQACAA==","P":[[1,"T"],[3,"M"],[4,"T"],[5,"U"],[6,"M"],[7,"M,R1,R2"],[8,"U,T"],[9,"U"],[10,""]]}],["static_modint",{"t":"IIFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN","n":["ModInt1000000007","ModInt998244353","StaticModInt","add","add_assign","","borrow","borrow_mut","clone","clone_into","clone_to_uninit","default","div","div_assign","","eq","fmt","","from","","","","","","","","","","","","","from_str","hash","into","inv","modulus","","mul","mul_assign","","neg","new","","one","pow","product","raw","","sub","sub_assign","","sum","to_owned","to_string","try_from","try_into","type_id","value","","zero"],"q":[[0,"static_modint"],[60,"internal_modint"],[61,"core::fmt"],[62,"core::result"],[63,"core::hash"],[64,"core::iter::traits::iterator"],[65,"alloc::string"],[66,"core::any"]],"i":"```b00000000000000000000000000000000000000000000000000000000","f":"```{{bc}b{}}{{{f{db}}b}h}{{{f{db}}c}hj}{f{{f{c}}}{}}{{{f{d}}}{{f{dc}}}{}}{{{f{b}}}b}{{f{f{dc}}}h{}}{{fl}h}{{}b}876{{{f{b}}{f{b}}}n}{{{f{b}}{f{dA`}}}Ab}0{Adb}{cc{}}{Afb}{Ahb}{Ajb}{Alb}{lb}{Anb}{B`b}{Bbb}{Bdb}{Bfb}{Bhb}{{{f{Bj}}}{{Bl{bc}}}{}}{{{f{b}}{f{dc}}}hBn}{{}c{}}{{{f{b}}}b}{{}Bd}0{{bc}b{}}{{{f{db}}c}hj}{{{f{db}}b}h}{bb}{cbj}0{{}b}{{{f{b}}Bh}b}{eb{}{{Cb{}{{C`{c}}}}}}??7650{fc{}}{fCd}{c{{Bl{e}}}{}{}}{{}{{Bl{c}}}{}}{fCf}{{{f{b}}}Bd}08","D":"d","p":[[5,"StaticModInt",0],[0,"mut"],[1,"reference",null,null,1],[1,"unit"],[10,"RemEuclidU32",60],[1,"u8"],[1,"bool"],[5,"Formatter",61],[8,"Result",61],[1,"u16"],[1,"i128"],[1,"isize"],[1,"i64"],[1,"i32"],[1,"i16"],[1,"i8"],[1,"u128"],[1,"u32"],[1,"usize"],[1,"u64"],[1,"str"],[6,"Result",62,null,1],[10,"Hasher",63],[17,"Item"],[10,"Iterator",64],[5,"String",65],[5,"TypeId",66]],"r":[],"b":[[4,"impl-AddAssign-for-StaticModInt%3CMOD%3E"],[5,"impl-AddAssign%3CT%3E-for-StaticModInt%3CMOD%3E"],[13,"impl-DivAssign-for-StaticModInt%3CMOD%3E"],[14,"impl-DivAssign%3CT%3E-for-StaticModInt%3CMOD%3E"],[16,"impl-Display-for-StaticModInt%3CMOD%3E"],[17,"impl-Debug-for-StaticModInt%3CMOD%3E"],[18,"impl-From%3Cu16%3E-for-StaticModInt%3CMOD%3E"],[20,"impl-From%3Ci128%3E-for-StaticModInt%3CMOD%3E"],[21,"impl-From%3Cisize%3E-for-StaticModInt%3CMOD%3E"],[22,"impl-From%3Ci64%3E-for-StaticModInt%3CMOD%3E"],[23,"impl-From%3Ci32%3E-for-StaticModInt%3CMOD%3E"],[24,"impl-From%3Cu8%3E-for-StaticModInt%3CMOD%3E"],[25,"impl-From%3Ci16%3E-for-StaticModInt%3CMOD%3E"],[26,"impl-From%3Ci8%3E-for-StaticModInt%3CMOD%3E"],[27,"impl-From%3Cu128%3E-for-StaticModInt%3CMOD%3E"],[28,"impl-From%3Cu32%3E-for-StaticModInt%3CMOD%3E"],[29,"impl-From%3Cusize%3E-for-StaticModInt%3CMOD%3E"],[30,"impl-From%3Cu64%3E-for-StaticModInt%3CMOD%3E"],[35,"impl-StaticModInt%3CMOD%3E"],[36,"impl-ModInt-for-StaticModInt%3CMOD%3E"],[38,"impl-MulAssign%3CT%3E-for-StaticModInt%3CMOD%3E"],[39,"impl-MulAssign-for-StaticModInt%3CMOD%3E"],[41,"impl-ModInt-for-StaticModInt%3CMOD%3E"],[42,"impl-StaticModInt%3CMOD%3E"],[46,"impl-ModInt-for-StaticModInt%3CMOD%3E"],[47,"impl-StaticModInt%3CMOD%3E"],[49,"impl-SubAssign%3CT%3E-for-StaticModInt%3CMOD%3E"],[50,"impl-SubAssign-for-StaticModInt%3CMOD%3E"],[57,"impl-StaticModInt%3CMOD%3E"],[58,"impl-ModInt-for-StaticModInt%3CMOD%3E"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAADoAAwAAABMAFQAMACMAGQA=","P":[[3,"T"],[4,""],[5,"T"],[8,""],[9,"T"],[10,""],[12,"T"],[13,""],[14,"T"],[15,""],[19,"T"],[20,""],[31,"FromStr::Err"],[32,"__H"],[33,"U"],[34,""],[37,"T"],[39,""],[41,"T"],[43,""],[45,"T,I"],[46,""],[48,"T"],[50,""],[51,"T,I"],[52,"T"],[53,""],[54,"U,T"],[55,"U"],[56,""]]}],["top2",{"t":"FNNNNNNNNNNNNNNNNN","n":["Top2Map","borrow","borrow_mut","clone","clone_into","clone_to_uninit","default","first","fmt","from","insert","into","new","second","to_owned","try_from","try_into","type_id"],"q":[[0,"top2"],[18,"core::clone"],[19,"core::cmp"],[20,"core::marker"],[21,"core::option"],[22,"core::fmt"],[23,"core::result"],[24,"core::any"]],"i":"`f0000000000000000","f":"`{b{{b{c}}}{}}{{{b{d}}}{{b{dc}}}{}}{{{b{{f{ce}}}}}{{f{ce}}}{hjl}{hnl}}{{b{b{dc}}}A`{}}{{bAb}A`}{{}{{f{ce}}}{jl}{nl}}{{{b{{f{ce}}}}}{{Af{{Ad{ce}}}}}{jl}{nl}}{{{b{{f{ce}}}}{b{dAh}}}Aj{Aljl}{Alnl}}{cc{}}{{{b{d{f{ce}}}}ce}A`{jl}{nl}}{{}c{}}54{bc{}}{c{{An{e}}}{}{}}{{}{{An{c}}}{}}{bB`}","D":"h","p":[[1,"reference",null,null,1],[0,"mut"],[5,"Top2Map",0],[10,"Clone",18],[10,"Eq",19],[10,"Copy",20],[10,"Ord",19],[1,"unit"],[1,"u8"],[1,"tuple",null,null,1],[6,"Option",21,null,1],[5,"Formatter",22],[8,"Result",22],[10,"Debug",22],[6,"Result",23,null,1],[5,"TypeId",24]],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAA4AAwACAAcACwAAAA0ABQA=","P":[[1,"T"],[3,"K,V"],[4,"T"],[5,""],[6,"K,V"],[9,"T"],[10,"K,V"],[11,"U"],[12,"K,V"],[14,"T"],[15,"U,T"],[16,"U"],[17,""]]}],["trie",{"t":"FNNNNNNNNNNNNNNNNNN","n":["Trie","borrow","borrow_mut","clone","clone_into","clone_to_uninit","default","delete_prefix","find","find_prefix","fmt","from","insert","into","new","to_owned","try_from","try_into","type_id"],"q":[[0,"trie"],[19,"core::fmt"],[20,"core::result"],[21,"core::any"]],"i":"`f00000000000000000","f":"`{b{{b{c}}}{}}{{{b{d}}}{{b{dc}}}{}}{{{b{f}}}f}{{b{b{dc}}}h{}}{{bj}h}{{}f}{{{b{df}}{b{{l{j}}}}}n}{{{b{f}}{b{{l{j}}}}}A`}0{{{b{f}}{b{dAb}}}Ad}{cc{}}{{{b{df}}{b{{l{j}}}}}h}{{}c{}}6{bc{}}{c{{Af{e}}}{}{}}{{}{{Af{c}}}{}}{bAh}","D":"n","p":[[1,"reference",null,null,1],[0,"mut"],[5,"Trie",0],[1,"unit"],[1,"u8"],[1,"slice"],[1,"usize"],[1,"bool"],[5,"Formatter",19],[8,"Result",19],[6,"Result",20,null,1],[5,"TypeId",21]],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAAwABAACAAUACwAAAA0AAAAPAAQA","P":[[1,"T"],[3,""],[4,"T"],[5,""],[11,"T"],[12,""],[13,"U"],[14,""],[15,"T"],[16,"U,T"],[17,"U"],[18,""]]}],["unionfind",{"t":"FNNNNNNNNNNNNNNNNNNNNN","n":["UnionFind","borrow","borrow_mut","clone","clone_into","clone_to_uninit","eq","fmt","from","groups","into","is_empty","leader","len","merge","new","same","size","to_owned","try_from","try_into","type_id"],"q":[[0,"unionfind"],[22,"core::fmt"],[23,"alloc::vec"],[24,"core::result"],[25,"core::any"]],"i":"`f00000000000000000000","f":"`{b{{b{c}}}{}}{{{b{d}}}{{b{dc}}}{}}{{{b{f}}}f}{{b{b{dc}}}h{}}{{bj}h}{{{b{f}}{b{f}}}l}{{{b{f}}{b{dn}}}A`}{cc{}}{{{b{f}}}{{Ad{{Ad{Ab}}}}}}{{}c{}}{{{b{f}}}l}{{{b{f}}Ab}Ab}{{{b{f}}}Ab}{{{b{df}}AbAb}Ab}{Abf}{{{b{f}}AbAb}l}4{bc{}}{c{{Af{e}}}{}{}}{{}{{Af{c}}}{}}{bAh}","D":"h","p":[[1,"reference",null,null,1],[0,"mut"],[5,"UnionFind",0],[1,"unit"],[1,"u8"],[1,"bool"],[5,"Formatter",22],[8,"Result",22],[1,"usize"],[5,"Vec",23],[6,"Result",24,null,1],[5,"TypeId",25]],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OzAAAAEAABIABAABAAcACgAAAAwAAgAQAAYA","P":[[1,"T"],[3,""],[4,"T"],[5,""],[8,"T"],[9,""],[10,"U"],[11,""],[18,"T"],[19,"U,T"],[20,"U"],[21,""]]}],["wavelet_matrix",{"t":"FNNNNNNNNNNNNNNNNNNNNN","n":["WaveletMatrix","access","borrow","borrow_mut","clone","clone_into","clone_to_uninit","fmt","from","into","new","next_value","prev_value","quantile","range_freq","rank","rank_less_eq_more","select","to_owned","try_from","try_into","type_id"],"q":[[0,"wavelet_matrix"],[22,"core::fmt"],[23,"core::option"],[24,"core::ops::range"],[25,"core::clone"],[26,"core::result"],[27,"core::any"]],"i":"`b00000000000000000000","f":"`{{{d{b}}f}f}{d{{d{c}}}{}}{{{d{h}}}{{d{hc}}}{}}{{{d{b}}}b}{{d{d{hc}}}j{}}{{dl}j}{{{d{b}}{d{hn}}}A`}{cc{}}{{}c{}}{{{d{{Ab{f}}}}}b}{{{d{b}}cf}{{Ad{f}}}{{Af{f}}Ah}}0{{{d{b}}cf}f{{Af{f}}}}{{{d{b}}ce}f{{Af{f}}Ah}{{Af{f}}}}{{{d{b}}ff}f}{{{d{b}}fc}{{Aj{fff}}}{{Af{f}}}}{{{d{b}}ff}{{Ad{f}}}}{dc{}}{c{{Al{e}}}{}{}}{{}{{Al{c}}}{}}{dAn}","D":"Aj","p":[[5,"WaveletMatrix",0],[1,"reference",null,null,1],[1,"usize"],[0,"mut"],[1,"unit"],[1,"u8"],[5,"Formatter",22],[8,"Result",22],[1,"slice"],[6,"Option",23,null,1],[10,"RangeBounds",24],[10,"Clone",25],[1,"tuple",null,null,1],[6,"Result",26,null,1],[5,"TypeId",27]],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAAkAAgADAAUAEwADAA==","P":[[2,"T"],[4,""],[5,"T"],[6,""],[8,"T"],[9,"U"],[10,""],[11,"R"],[14,"R1,R2"],[15,""],[16,"R"],[17,""],[18,"T"],[19,"U,T"],[20,"U"],[21,""]]}],["wavelet_matrix_cum_sum",{"t":"FFNNNNNNNNNNNNNNNNNNNNNNNNNN","n":["WMCumSumWrapper","WaveletMatrixCumSum","borrow","","borrow_mut","","clone","clone_into","clone_to_uninit","fmt","from","","get","get_weight","into","","new","","prefix_rect_sum","rect_sum","","to_owned","try_from","","try_into","","type_id",""],"q":[[0,"wavelet_matrix_cum_sum"],[28,"core::clone"],[29,"internal_type_traits"],[30,"core::fmt"],[31,"alloc::vec"],[32,"core::ops::range"],[33,"core::result"],[34,"core::any"]],"i":"``Aff100000101010100100101010","f":"``{b{{b{c}}}{}}0{{{b{d}}}{{b{dc}}}{}}0{{{b{{f{c}}}}}{{f{c}}}{hj}}{{b{b{dc}}}l{}}{{bn}l}{{{b{{f{c}}}}{b{dA`}}}Ab{Adj}}{cc{}}0{{{b{{Af{ce}}}}cc}ejj}{{{b{{f{c}}}}Ah}cj}{{}c{}}0{{{Al{{Aj{cce}}}}}{{Af{ce}}}jj}{{{b{{An{Ah}}}}{b{{An{c}}}}}{{f{c}}}j}{{{b{{f{c}}}}eAh}cj{{B`{Ah}}}}{{{b{{Af{ce}}}}gi}ejj{{B`{c}}}{{B`{c}}}}{{{b{{f{c}}}}eg}cj{{B`{Ah}}h}{{B`{Ah}}}}{bc{}}{c{{Bb{e}}}{}{}}0{{}{{Bb{c}}}{}}0{bBd}0","D":"Aj","p":[[1,"reference",null,null,1],[0,"mut"],[5,"WaveletMatrixCumSum",0],[10,"Clone",28],[10,"Integral",29],[1,"unit"],[1,"u8"],[5,"Formatter",30],[8,"Result",30],[10,"Debug",30],[5,"WMCumSumWrapper",0],[1,"usize"],[1,"tuple",null,null,1],[5,"Vec",31],[1,"slice"],[10,"RangeBounds",32],[6,"Result",33,null,1],[5,"TypeId",34]],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAA8AAwADAAcADgAAABYABgA=","P":[[2,"T"],[8,""],[9,"T"],[12,"T,U"],[13,"T"],[14,"U"],[16,"T,U"],[17,"T"],[18,"T,R"],[19,"T,U,R1,R2"],[20,"T,R1,R2"],[21,"T"],[22,"U,T"],[24,"U"],[26,""]]}],["wavelet_matrix_fenwick",{"t":"FNNNNNNNNNNNNN","n":["WMFenwickWrapper","add","borrow","borrow_mut","from","from_weight","get","into","new","rect_sum","set","try_from","try_into","type_id"],"q":[[0,"wavelet_matrix_fenwick"],[14,"internal_type_traits"],[15,"alloc::vec"],[16,"core::ops::range"],[17,"core::result"],[18,"core::any"]],"i":"`d000000000000","f":"`{{{f{b{d{ce}}}}cce}hjj}{f{{f{c}}}{}}{{{f{b}}}{{f{bc}}}{}}{cc{}}{{{n{{l{cc}}}}{f{{A`{{l{cce}}}}}}}{{d{ce}}}jj}{{{f{{d{ce}}}}cc}ejj}{{}c{}}{{{n{{l{cc}}}}}{{d{ce}}}jj}{{{f{{d{ce}}}}gi}ejj{{Ab{c}}}{{Ab{c}}}}8{c{{Ad{e}}}{}{}}{{}{{Ad{c}}}{}}{fAf}","D":"Ad","p":[[0,"mut"],[5,"WMFenwickWrapper",0],[1,"reference",null,null,1],[1,"unit"],[10,"Integral",14],[1,"tuple",null,null,1],[5,"Vec",15],[1,"slice"],[10,"RangeBounds",16],[6,"Result",17,null,1],[5,"TypeId",18]],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OjAAAAEAAAAAAAQAEAAAAAMABAAMAA0ADgA=","P":[[1,"T,U"],[2,"T"],[5,"T,U"],[7,"U"],[8,"T,U"],[9,"T,U,R1,R2"],[10,"T,U"],[11,"U,T"],[12,"U"],[13,""]]}],["wavelet_matrix_segtree",{"t":"FNNNNNNNNNNNNN","n":["WMSegWrapper","borrow","borrow_mut","from","from_weight","get","into","new","rect_sum_group","rect_sum_monoid","set","try_from","try_into","type_id"],"q":[[0,"wavelet_matrix_segtree"],[14,"alloc::vec"],[15,"internal_type_traits"],[16,"algebra"],[17,"core::ops::range"],[18,"core::result"],[19,"core::any"]],"i":"`l000000000000","f":"`{b{{b{c}}}{}}{{{b{d}}}{{b{dc}}}{}}{cc{}}{{{h{{f{cc}}}}{b{{j{{f{cc}}}}}}}{{l{ec}}}n{A`Ab}}{{{b{{l{ce}}}}ee}{}{A`Ab}n}{{}c{}}{{{h{{f{cc}}}}}{{l{ec}}}n{A`Ab}}{{{b{{l{ce}}}}gi}{}{AdA`Ab}n{{Af{e}}}{{Af{e}}}}{{{b{{l{ce}}}}gi}{}{A`Ab}n{{Af{e}}}{{Af{e}}}}{{{b{d{l{ce}}}}ee}Ah{A`Ab}n}{c{{Aj{e}}}{}{}}{{}{{Aj{c}}}{}}{bAl}","D":"Ad","p":[[1,"reference",null,null,1],[0,"mut"],[1,"tuple",null,null,1],[5,"Vec",14],[1,"slice"],[5,"WMSegWrapper",0],[10,"Integral",15],[10,"Monoid",16],[10,"Commutative",16],[10,"Group",16],[10,"RangeBounds",17],[1,"unit"],[6,"Result",18,null,1],[5,"TypeId",19]],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OjAAAAEAAAAAAAQAEAAAAAIAAwAMAA0ADgA=","P":[[1,"T"],[4,"T,M"],[5,"M,T"],[6,"U"],[7,"T,M"],[8,"M,T,R1,R2"],[10,"M,T"],[11,"U,T"],[12,"U"],[13,""]]}],["zeta_mobius_bitset",{"t":"HHHH","n":["subset_mobius","subset_zeta","superset_mobius","superset_zeta"],"q":[[0,"zeta_mobius_bitset"],[4,"alloc::vec"],[5,"core::ops::arith"],[6,"core::marker"],[7,"core::ops::function"]],"i":"````","f":"{{{b{c}}}{{b{c}}}{{f{}{{d{}}}}h}}{{{b{c}}e}{{b{c}}}h{{j{cc}{{d{c}}}}}}10","D":"j","p":[[5,"Vec",4],[17,"Output"],[10,"Sub",5],[10,"Copy",6],[10,"Fn",7]],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OjAAAAAAAAA=","P":[[0,"T"]]}]]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
//{"start":39,"fragment_lengths":[925,1603,603,919,2016,658,2079,1056,2494,749,163,985,934,1236,1731,834,974,4178,945,285,1068,393,1375,207,2530,1395,1144,186,509,389,1250,1363,5194,166,863,2219,1616,986,1715,923,4198,1271,2031,874,411,713,826,988,1425,950,1096,956,1256,888,1420,1111,1075,1092,982,3403,1157,936,1026,1292,1496,1004,1155,457]}