(function() {
    var type_impls = Object.fromEntries([["lazy_segtree_utils",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-LazySegTree%3CF%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/lazy_segtree/lib.rs.html#8\">Source</a><a href=\"#impl-Debug-for-LazySegTree%3CF%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;F&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"lazy_segtree/struct.LazySegTree.html\" title=\"struct lazy_segtree::LazySegTree\">LazySegTree</a>&lt;F&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> + <a class=\"trait\" href=\"algebra/trait.ActionMonoid.html\" title=\"trait algebra::ActionMonoid\">ActionMonoid</a>,\n    &lt;F as <a class=\"trait\" href=\"algebra/trait.ActionMonoid.html\" title=\"trait algebra::ActionMonoid\">ActionMonoid</a>&gt;::<a class=\"associatedtype\" href=\"algebra/trait.ActionMonoid.html#associatedtype.M\" title=\"type algebra::ActionMonoid::M\">M</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>,\n    &lt;F as <a class=\"trait\" href=\"algebra/trait.ActionMonoid.html\" title=\"trait algebra::ActionMonoid\">ActionMonoid</a>&gt;::<a class=\"associatedtype\" href=\"algebra/trait.ActionMonoid.html#associatedtype.A\" title=\"type algebra::ActionMonoid::A\">A</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/lazy_segtree/lib.rs.html#8\">Source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.89.0/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.89.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.89.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.89.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.89.0/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","lazy_segtree_utils::AddMaxLazySegTree","lazy_segtree_utils::AddMinLazySegTree","lazy_segtree_utils::AddSumLazySegTree","lazy_segtree_utils::UpdateMaxLazySegTree","lazy_segtree_utils::UpdateMinLazySegTree","lazy_segtree_utils::UpdateSumLazySegTree"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CVec%3C%3C%3CF+as+ActionMonoid%3E::M+as+Monoid%3E::Target%3E%3E-for-LazySegTree%3CF%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/lazy_segtree/lib.rs.html#17\">Source</a><a href=\"#impl-From%3CVec%3C%3C%3CF+as+ActionMonoid%3E::M+as+Monoid%3E::Target%3E%3E-for-LazySegTree%3CF%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;F&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.89.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;&lt;&lt;F as <a class=\"trait\" href=\"algebra/trait.ActionMonoid.html\" title=\"trait algebra::ActionMonoid\">ActionMonoid</a>&gt;::<a class=\"associatedtype\" href=\"algebra/trait.ActionMonoid.html#associatedtype.M\" title=\"type algebra::ActionMonoid::M\">M</a> as <a class=\"trait\" href=\"algebra/trait.Monoid.html\" title=\"trait algebra::Monoid\">Monoid</a>&gt;::<a class=\"associatedtype\" href=\"algebra/trait.Monoid.html#associatedtype.Target\" title=\"type algebra::Monoid::Target\">Target</a>&gt;&gt; for <a class=\"struct\" href=\"lazy_segtree/struct.LazySegTree.html\" title=\"struct lazy_segtree::LazySegTree\">LazySegTree</a>&lt;F&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"algebra/trait.ActionMonoid.html\" title=\"trait algebra::ActionMonoid\">ActionMonoid</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/lazy_segtree/lib.rs.html#18\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.89.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(v: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.89.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;&lt;&lt;F as <a class=\"trait\" href=\"algebra/trait.ActionMonoid.html\" title=\"trait algebra::ActionMonoid\">ActionMonoid</a>&gt;::<a class=\"associatedtype\" href=\"algebra/trait.ActionMonoid.html#associatedtype.M\" title=\"type algebra::ActionMonoid::M\">M</a> as <a class=\"trait\" href=\"algebra/trait.Monoid.html\" title=\"trait algebra::Monoid\">Monoid</a>&gt;::<a class=\"associatedtype\" href=\"algebra/trait.Monoid.html#associatedtype.Target\" title=\"type algebra::Monoid::Target\">Target</a>&gt;) -&gt; <a class=\"struct\" href=\"lazy_segtree/struct.LazySegTree.html\" title=\"struct lazy_segtree::LazySegTree\">LazySegTree</a>&lt;F&gt;</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Vec<<<F as ActionMonoid>::M as Monoid>::Target>>","lazy_segtree_utils::AddMaxLazySegTree","lazy_segtree_utils::AddMinLazySegTree","lazy_segtree_utils::AddSumLazySegTree","lazy_segtree_utils::UpdateMaxLazySegTree","lazy_segtree_utils::UpdateMinLazySegTree","lazy_segtree_utils::UpdateSumLazySegTree"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-LazySegTree%3CF%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/lazy_segtree/lib.rs.html#269-271\">Source</a><a href=\"#impl-LazySegTree%3CF%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;F&gt; <a class=\"struct\" href=\"lazy_segtree/struct.LazySegTree.html\" title=\"struct lazy_segtree::LazySegTree\">LazySegTree</a>&lt;F&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"algebra/trait.ActionMonoid.html\" title=\"trait algebra::ActionMonoid\">ActionMonoid</a>,\n    &lt;F as <a class=\"trait\" href=\"algebra/trait.ActionMonoid.html\" title=\"trait algebra::ActionMonoid\">ActionMonoid</a>&gt;::<a class=\"associatedtype\" href=\"algebra/trait.ActionMonoid.html#associatedtype.A\" title=\"type algebra::ActionMonoid::A\">A</a>: <a class=\"trait\" href=\"algebra/trait.Commutative.html\" title=\"trait algebra::Commutative\">Commutative</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.apply_range_commutative\" class=\"method\"><a class=\"src rightside\" href=\"src/lazy_segtree/lib.rs.html#274\">Source</a><h4 class=\"code-header\">pub fn <a href=\"lazy_segtree/struct.LazySegTree.html#tymethod.apply_range_commutative\" class=\"fn\">apply_range_commutative</a>&lt;R&gt;(\n    &amp;mut self,\n    range: R,\n    f: &amp;&lt;F as <a class=\"trait\" href=\"algebra/trait.ActionMonoid.html\" title=\"trait algebra::ActionMonoid\">ActionMonoid</a>&gt;::<a class=\"associatedtype\" href=\"algebra/trait.ActionMonoid.html#associatedtype.A\" title=\"type algebra::ActionMonoid::A\">A</a>,\n)<div class=\"where\">where\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/ops/range/trait.RangeBounds.html\" title=\"trait core::ops::range::RangeBounds\">RangeBounds</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/std/primitive.usize.html\">usize</a>&gt;,</div></h4></section></summary><div class=\"docblock\"><p>可換な作用の区間適用</p>\n</div></details></div></details>",0,"lazy_segtree_utils::AddMaxLazySegTree","lazy_segtree_utils::AddMinLazySegTree","lazy_segtree_utils::AddSumLazySegTree","lazy_segtree_utils::UpdateMaxLazySegTree","lazy_segtree_utils::UpdateMinLazySegTree","lazy_segtree_utils::UpdateSumLazySegTree"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-LazySegTree%3CF%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/lazy_segtree/lib.rs.html#41\">Source</a><a href=\"#impl-LazySegTree%3CF%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;F&gt; <a class=\"struct\" href=\"lazy_segtree/struct.LazySegTree.html\" title=\"struct lazy_segtree::LazySegTree\">LazySegTree</a>&lt;F&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"algebra/trait.ActionMonoid.html\" title=\"trait algebra::ActionMonoid\">ActionMonoid</a>,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.new\" class=\"method\"><a class=\"src rightside\" href=\"src/lazy_segtree/lib.rs.html#42\">Source</a><h4 class=\"code-header\">pub fn <a href=\"lazy_segtree/struct.LazySegTree.html#tymethod.new\" class=\"fn\">new</a>(n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"struct\" href=\"lazy_segtree/struct.LazySegTree.html\" title=\"struct lazy_segtree::LazySegTree\">LazySegTree</a>&lt;F&gt;</h4></section><section id=\"method.set\" class=\"method\"><a class=\"src rightside\" href=\"src/lazy_segtree/lib.rs.html#46\">Source</a><h4 class=\"code-header\">pub fn <a href=\"lazy_segtree/struct.LazySegTree.html#tymethod.set\" class=\"fn\">set</a>(&amp;mut self, p: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/std/primitive.usize.html\">usize</a>, x: &lt;&lt;F as <a class=\"trait\" href=\"algebra/trait.ActionMonoid.html\" title=\"trait algebra::ActionMonoid\">ActionMonoid</a>&gt;::<a class=\"associatedtype\" href=\"algebra/trait.ActionMonoid.html#associatedtype.M\" title=\"type algebra::ActionMonoid::M\">M</a> as <a class=\"trait\" href=\"algebra/trait.Monoid.html\" title=\"trait algebra::Monoid\">Monoid</a>&gt;::<a class=\"associatedtype\" href=\"algebra/trait.Monoid.html#associatedtype.Target\" title=\"type algebra::Monoid::Target\">Target</a>)</h4></section><section id=\"method.get\" class=\"method\"><a class=\"src rightside\" href=\"src/lazy_segtree/lib.rs.html#58\">Source</a><h4 class=\"code-header\">pub fn <a href=\"lazy_segtree/struct.LazySegTree.html#tymethod.get\" class=\"fn\">get</a>(&amp;mut self, p: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/std/primitive.usize.html\">usize</a>) -&gt; &lt;&lt;F as <a class=\"trait\" href=\"algebra/trait.ActionMonoid.html\" title=\"trait algebra::ActionMonoid\">ActionMonoid</a>&gt;::<a class=\"associatedtype\" href=\"algebra/trait.ActionMonoid.html#associatedtype.M\" title=\"type algebra::ActionMonoid::M\">M</a> as <a class=\"trait\" href=\"algebra/trait.Monoid.html\" title=\"trait algebra::Monoid\">Monoid</a>&gt;::<a class=\"associatedtype\" href=\"algebra/trait.Monoid.html#associatedtype.Target\" title=\"type algebra::Monoid::Target\">Target</a></h4></section><section id=\"method.prod\" class=\"method\"><a class=\"src rightside\" href=\"src/lazy_segtree/lib.rs.html#82\">Source</a><h4 class=\"code-header\">pub fn <a href=\"lazy_segtree/struct.LazySegTree.html#tymethod.prod\" class=\"fn\">prod</a>&lt;R&gt;(\n    &amp;mut self,\n    range: R,\n) -&gt; &lt;&lt;F as <a class=\"trait\" href=\"algebra/trait.ActionMonoid.html\" title=\"trait algebra::ActionMonoid\">ActionMonoid</a>&gt;::<a class=\"associatedtype\" href=\"algebra/trait.ActionMonoid.html#associatedtype.M\" title=\"type algebra::ActionMonoid::M\">M</a> as <a class=\"trait\" href=\"algebra/trait.Monoid.html\" title=\"trait algebra::Monoid\">Monoid</a>&gt;::<a class=\"associatedtype\" href=\"algebra/trait.Monoid.html#associatedtype.Target\" title=\"type algebra::Monoid::Target\">Target</a><div class=\"where\">where\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/ops/range/trait.RangeBounds.html\" title=\"trait core::ops::range::RangeBounds\">RangeBounds</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/std/primitive.usize.html\">usize</a>&gt;,</div></h4></section><section id=\"method.all_prod\" class=\"method\"><a class=\"src rightside\" href=\"src/lazy_segtree/lib.rs.html#121\">Source</a><h4 class=\"code-header\">pub fn <a href=\"lazy_segtree/struct.LazySegTree.html#tymethod.all_prod\" class=\"fn\">all_prod</a>(&amp;self) -&gt; &lt;&lt;F as <a class=\"trait\" href=\"algebra/trait.ActionMonoid.html\" title=\"trait algebra::ActionMonoid\">ActionMonoid</a>&gt;::<a class=\"associatedtype\" href=\"algebra/trait.ActionMonoid.html#associatedtype.M\" title=\"type algebra::ActionMonoid::M\">M</a> as <a class=\"trait\" href=\"algebra/trait.Monoid.html\" title=\"trait algebra::Monoid\">Monoid</a>&gt;::<a class=\"associatedtype\" href=\"algebra/trait.Monoid.html#associatedtype.Target\" title=\"type algebra::Monoid::Target\">Target</a></h4></section><section id=\"method.apply\" class=\"method\"><a class=\"src rightside\" href=\"src/lazy_segtree/lib.rs.html#125\">Source</a><h4 class=\"code-header\">pub fn <a href=\"lazy_segtree/struct.LazySegTree.html#tymethod.apply\" class=\"fn\">apply</a>(&amp;mut self, p: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/std/primitive.usize.html\">usize</a>, f: &amp;&lt;F as <a class=\"trait\" href=\"algebra/trait.ActionMonoid.html\" title=\"trait algebra::ActionMonoid\">ActionMonoid</a>&gt;::<a class=\"associatedtype\" href=\"algebra/trait.ActionMonoid.html#associatedtype.A\" title=\"type algebra::ActionMonoid::A\">A</a>)</h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.apply_range\" class=\"method\"><a class=\"src rightside\" href=\"src/lazy_segtree/lib.rs.html#139\">Source</a><h4 class=\"code-header\">pub fn <a href=\"lazy_segtree/struct.LazySegTree.html#tymethod.apply_range\" class=\"fn\">apply_range</a>&lt;R&gt;(&amp;mut self, range: R, f: &amp;&lt;F as <a class=\"trait\" href=\"algebra/trait.ActionMonoid.html\" title=\"trait algebra::ActionMonoid\">ActionMonoid</a>&gt;::<a class=\"associatedtype\" href=\"algebra/trait.ActionMonoid.html#associatedtype.A\" title=\"type algebra::ActionMonoid::A\">A</a>)<div class=\"where\">where\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/ops/range/trait.RangeBounds.html\" title=\"trait core::ops::range::RangeBounds\">RangeBounds</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/std/primitive.usize.html\">usize</a>&gt;,</div></h4></section></summary><div class=\"docblock\"><p>作用の可換性を仮定しない上での区間適用<br />\n可換な作用は<code>apply_range_commutative</code>の方が定数倍高速</p>\n</div></details><section id=\"method.max_right\" class=\"method\"><a class=\"src rightside\" href=\"src/lazy_segtree/lib.rs.html#188-190\">Source</a><h4 class=\"code-header\">pub fn <a href=\"lazy_segtree/struct.LazySegTree.html#tymethod.max_right\" class=\"fn\">max_right</a>&lt;G&gt;(&amp;mut self, l: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/std/primitive.usize.html\">usize</a>, g: G) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/std/primitive.usize.html\">usize</a><div class=\"where\">where\n    G: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(&amp;&lt;&lt;F as <a class=\"trait\" href=\"algebra/trait.ActionMonoid.html\" title=\"trait algebra::ActionMonoid\">ActionMonoid</a>&gt;::<a class=\"associatedtype\" href=\"algebra/trait.ActionMonoid.html#associatedtype.M\" title=\"type algebra::ActionMonoid::M\">M</a> as <a class=\"trait\" href=\"algebra/trait.Monoid.html\" title=\"trait algebra::Monoid\">Monoid</a>&gt;::<a class=\"associatedtype\" href=\"algebra/trait.Monoid.html#associatedtype.Target\" title=\"type algebra::Monoid::Target\">Target</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/std/primitive.bool.html\">bool</a>,</div></h4></section><section id=\"method.min_left\" class=\"method\"><a class=\"src rightside\" href=\"src/lazy_segtree/lib.rs.html#228-230\">Source</a><h4 class=\"code-header\">pub fn <a href=\"lazy_segtree/struct.LazySegTree.html#tymethod.min_left\" class=\"fn\">min_left</a>&lt;G&gt;(&amp;mut self, r: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/std/primitive.usize.html\">usize</a>, g: G) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/std/primitive.usize.html\">usize</a><div class=\"where\">where\n    G: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(&amp;&lt;&lt;F as <a class=\"trait\" href=\"algebra/trait.ActionMonoid.html\" title=\"trait algebra::ActionMonoid\">ActionMonoid</a>&gt;::<a class=\"associatedtype\" href=\"algebra/trait.ActionMonoid.html#associatedtype.M\" title=\"type algebra::ActionMonoid::M\">M</a> as <a class=\"trait\" href=\"algebra/trait.Monoid.html\" title=\"trait algebra::Monoid\">Monoid</a>&gt;::<a class=\"associatedtype\" href=\"algebra/trait.Monoid.html#associatedtype.Target\" title=\"type algebra::Monoid::Target\">Target</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/std/primitive.bool.html\">bool</a>,</div></h4></section></div></details>",0,"lazy_segtree_utils::AddMaxLazySegTree","lazy_segtree_utils::AddMinLazySegTree","lazy_segtree_utils::AddSumLazySegTree","lazy_segtree_utils::UpdateMaxLazySegTree","lazy_segtree_utils::UpdateMinLazySegTree","lazy_segtree_utils::UpdateSumLazySegTree"]]]]);
    if (window.register_type_impls) {
        window.register_type_impls(type_impls);
    } else {
        window.pending_type_impls = type_impls;
    }
})()
//{"start":55,"fragment_lengths":[18170]}