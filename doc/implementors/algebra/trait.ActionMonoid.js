(function() {var implementors = {
"lazy_segtree_utils":[["impl&lt;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.70.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.70.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> + <a class=\"trait\" href=\"internal_type_traits/trait.BoundedAbove.html\" title=\"trait internal_type_traits::BoundedAbove\">BoundedAbove</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.70.0/core/cmp/trait.Ord.html\" title=\"trait core::cmp::Ord\">Ord</a>&gt; <a class=\"trait\" href=\"algebra/trait.ActionMonoid.html\" title=\"trait algebra::ActionMonoid\">ActionMonoid</a> for <a class=\"struct\" href=\"lazy_segtree_utils/inner_types/struct.UpdateMin.html\" title=\"struct lazy_segtree_utils::inner_types::UpdateMin\">UpdateMin</a>&lt;T&gt;"],["impl&lt;T: <a class=\"trait\" href=\"internal_type_traits/trait.Zero.html\" title=\"trait internal_type_traits::Zero\">Zero</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.70.0/core/ops/arith/trait.AddAssign.html\" title=\"trait core::ops::arith::AddAssign\">AddAssign</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.70.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.70.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> + <a class=\"trait\" href=\"internal_type_traits/trait.BoundedAbove.html\" title=\"trait internal_type_traits::BoundedAbove\">BoundedAbove</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.70.0/core/cmp/trait.Ord.html\" title=\"trait core::cmp::Ord\">Ord</a>&gt; <a class=\"trait\" href=\"algebra/trait.ActionMonoid.html\" title=\"trait algebra::ActionMonoid\">ActionMonoid</a> for <a class=\"struct\" href=\"lazy_segtree_utils/inner_types/struct.AddMin.html\" title=\"struct lazy_segtree_utils::inner_types::AddMin\">AddMin</a>&lt;T&gt;"],["impl&lt;T: <a class=\"trait\" href=\"internal_type_traits/trait.Zero.html\" title=\"trait internal_type_traits::Zero\">Zero</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.70.0/core/ops/arith/trait.AddAssign.html\" title=\"trait core::ops::arith::AddAssign\">AddAssign</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.70.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.70.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> + <a class=\"trait\" href=\"internal_type_traits/trait.BoundedBelow.html\" title=\"trait internal_type_traits::BoundedBelow\">BoundedBelow</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.70.0/core/cmp/trait.Ord.html\" title=\"trait core::cmp::Ord\">Ord</a>&gt; <a class=\"trait\" href=\"algebra/trait.ActionMonoid.html\" title=\"trait algebra::ActionMonoid\">ActionMonoid</a> for <a class=\"struct\" href=\"lazy_segtree_utils/inner_types/struct.AddMax.html\" title=\"struct lazy_segtree_utils::inner_types::AddMax\">AddMax</a>&lt;T&gt;"],["impl&lt;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.70.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.70.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> + <a class=\"trait\" href=\"internal_type_traits/trait.BoundedBelow.html\" title=\"trait internal_type_traits::BoundedBelow\">BoundedBelow</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.70.0/core/cmp/trait.Ord.html\" title=\"trait core::cmp::Ord\">Ord</a>&gt; <a class=\"trait\" href=\"algebra/trait.ActionMonoid.html\" title=\"trait algebra::ActionMonoid\">ActionMonoid</a> for <a class=\"struct\" href=\"lazy_segtree_utils/inner_types/struct.UpdateMax.html\" title=\"struct lazy_segtree_utils::inner_types::UpdateMax\">UpdateMax</a>&lt;T&gt;"],["impl&lt;T: <a class=\"trait\" href=\"internal_type_traits/trait.Zero.html\" title=\"trait internal_type_traits::Zero\">Zero</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.70.0/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a>&lt;Output = T&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.70.0/core/ops/arith/trait.AddAssign.html\" title=\"trait core::ops::arith::AddAssign\">AddAssign</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.70.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;Output = T&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.70.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.70.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>&gt; <a class=\"trait\" href=\"algebra/trait.ActionMonoid.html\" title=\"trait algebra::ActionMonoid\">ActionMonoid</a> for <a class=\"struct\" href=\"lazy_segtree_utils/inner_types/struct.AddSum.html\" title=\"struct lazy_segtree_utils::inner_types::AddSum\">AddSum</a>&lt;T&gt;"],["impl&lt;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.70.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.70.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.70.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;Output = T&gt; + <a class=\"trait\" href=\"internal_type_traits/trait.Zero.html\" title=\"trait internal_type_traits::Zero\">Zero</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.70.0/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a>&lt;Output = T&gt;&gt; <a class=\"trait\" href=\"algebra/trait.ActionMonoid.html\" title=\"trait algebra::ActionMonoid\">ActionMonoid</a> for <a class=\"struct\" href=\"lazy_segtree_utils/inner_types/struct.UpdateSum.html\" title=\"struct lazy_segtree_utils::inner_types::UpdateSum\">UpdateSum</a>&lt;T&gt;"]]
};if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()